{"ast":null,"code":"import _toConsumableArray from \"/Users/reedmurphy/Desktop/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/reedmurphy/Desktop/material-dashboard-react-master/src/components/KPI/Kpi2.jsx\";\nimport React from \"react\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LineGraph from \"components/Graphs/LineGraph\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nvar useStyles = makeStyles(styles);\nvar desiredDataFormat = {\n  // Labels - days of the month\n  labels: [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\"].concat(_toConsumableArray(\"30\")),\n  // Data series orders count\n  series: {\n    \"Orders\": {\n      count: [12, 17, 7, 17, 23, 18, 28],\n      isActive: true,\n      Background_Color: 'blue'\n    },\n    \"Sales\": {\n      count: [1200, 1700, 700, 1700, 2300, 1800, 2800],\n      isActive: true,\n      Background_Color: 'red'\n    },\n    \"Profit\": {\n      values: [600, 800, 400, 100, 1300, 900, 1400],\n      isActive: true,\n      Background_Color: 'green'\n    }\n  }\n};\nexport default function Kpi2(props) {\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(Card, {\n    chart: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.graphTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Daily Sales\"), /*#__PURE__*/React.createElement(LineGraph, {\n    data: desiredDataFormat,\n    height: 350,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.cardCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.successText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ArrowUpward, {\n    className: classes.upArrowCardCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }), \" 55%\"), \" \", \"increase in today sales.\")), /*#__PURE__*/React.createElement(CardFooter, {\n    chart: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.stats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AccessTime, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }), \" updated 4 minutes ago\")));\n}","map":{"version":3,"sources":["/Users/reedmurphy/Desktop/material-dashboard-react-master/src/components/KPI/Kpi2.jsx"],"names":["React","Card","CardHeader","CardBody","CardFooter","ArrowUpward","AccessTime","makeStyles","LineGraph","styles","useStyles","desiredDataFormat","labels","series","count","isActive","Background_Color","values","Kpi2","props","classes","graphTitle","cardCategory","successText","upArrowCardCategory","stats"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\n\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\n\nimport AccessTime from \"@material-ui/icons/AccessTime\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport LineGraph from \"components/Graphs/LineGraph\";\n\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nconst desiredDataFormat = {\n    // Labels - days of the month\n    labels: [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", ...\"30\"],\n    // Data series orders count\n    series: {\n        \"Orders\": {\n            count: [12, 17, 7, 17, 23, 18, 28],\n            isActive: true,\n            Background_Color: 'blue'\n        },\n        \"Sales\": {\n            count: [1200, 1700, 700, 1700, 2300, 1800, 2800],\n            isActive: true,\n            Background_Color: 'red'\n        },\n        \"Profit\": {\n            values: [600, 800, 400, 100, 1300, 900, 1400],\n            isActive: true,\n            Background_Color: 'green'\n        }\n    }\n}\n\nexport default function Kpi2(props) {\n    const classes = useStyles();\n    return (\n        <Card chart>\n            <CardHeader>\n                <h4 className={classes.graphTitle}>Daily Sales</h4>\n                <LineGraph data={desiredDataFormat} height={350} />\n            </CardHeader>\n            <CardBody>\n                <p className={classes.cardCategory}>\n                    <span className={classes.successText}>\n                        <ArrowUpward className={classes.upArrowCardCategory} /> 55%\n                </span>{\" \"}\n                increase in today sales.\n              </p>\n            </CardBody>\n            <CardFooter chart>\n                <div className={classes.stats}>\n                    <AccessTime /> updated 4 minutes ago\n              </div>\n            </CardFooter>\n        </Card>\n    )\n}"]},"metadata":{},"sourceType":"module"}