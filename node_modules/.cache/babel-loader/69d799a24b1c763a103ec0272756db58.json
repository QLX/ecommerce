{"ast":null,"code":"import { schemeCategory10, schemeAccent, schemeDark2, schemePaired, schemePastel1, schemePastel2, schemeSet1, schemeSet2, schemeSet3, schemeBrBG, schemePRGn, schemePiYG, schemePuOr, schemeRdBu, schemeRdGy, schemeRdYlBu, schemeRdYlGn, schemeSpectral, schemeBlues, schemeGreens, schemeGreys, schemeOranges, schemePurples, schemeReds, schemeBuGn, schemeBuPu, schemeGnBu, schemeOrRd, schemePuBuGn, schemePuBu, schemePuRd, schemeRdPu, schemeYlGnBu, schemeYlGn, schemeYlOrBr, schemeYlOrRd, interpolateBrBG, interpolatePRGn, interpolatePiYG, interpolatePuOr, interpolateRdBu, interpolateRdGy, interpolateRdYlBu, interpolateRdYlGn, interpolateSpectral, interpolateBlues, interpolateGreens, interpolateGreys, interpolateOranges, interpolatePurples, interpolateReds, interpolateViridis, interpolateInferno, interpolateMagma, interpolatePlasma, interpolateWarm, interpolateCool, interpolateCubehelixDefault, interpolateBuGn, interpolateBuPu, interpolateGnBu, interpolateOrRd, interpolatePuBuGn, interpolatePuBu, interpolatePuRd, interpolateRdPu, interpolateYlGnBu, interpolateYlGn, interpolateYlOrBr, interpolateYlOrRd, interpolateRainbow, interpolateSinebow } from 'd3-scale-chromatic';\nimport { useMemo } from 'react';\nimport get from 'lodash.get';\nimport isPlainObject from 'lodash.isplainobject';\nimport { scaleOrdinal } from 'd3-scale';\nimport { rgb } from 'd3-color';\nimport PropTypes from 'prop-types';\nimport { spring } from 'react-motion';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar categoricalColorSchemes = {\n  nivo: ['#e8c1a0', '#f47560', '#f1e15b', '#e8a838', '#61cdbb', '#97e3d5'],\n  category10: schemeCategory10,\n  accent: schemeAccent,\n  dark2: schemeDark2,\n  paired: schemePaired,\n  pastel1: schemePastel1,\n  pastel2: schemePastel2,\n  set1: schemeSet1,\n  set2: schemeSet2,\n  set3: schemeSet3\n};\nvar categoricalColorSchemeIds = Object.keys(categoricalColorSchemes);\n\nvar isCategoricalColorScheme = function isCategoricalColorScheme(scheme) {\n  return categoricalColorSchemeIds.includes(scheme);\n};\n\nvar divergingColorSchemes = {\n  brown_blueGreen: schemeBrBG,\n  purpleRed_green: schemePRGn,\n  pink_yellowGreen: schemePiYG,\n  purple_orange: schemePuOr,\n  red_blue: schemeRdBu,\n  red_grey: schemeRdGy,\n  red_yellow_blue: schemeRdYlBu,\n  red_yellow_green: schemeRdYlGn,\n  spectral: schemeSpectral\n};\nvar divergingColorSchemeIds = Object.keys(divergingColorSchemes);\n\nvar isDivergingColorScheme = function isDivergingColorScheme(scheme) {\n  return divergingColorSchemeIds.includes(scheme);\n};\n\nvar sequentialColorSchemes = {\n  blues: schemeBlues,\n  greens: schemeGreens,\n  greys: schemeGreys,\n  oranges: schemeOranges,\n  purples: schemePurples,\n  reds: schemeReds,\n  blue_green: schemeBuGn,\n  blue_purple: schemeBuPu,\n  green_blue: schemeGnBu,\n  orange_red: schemeOrRd,\n  purple_blue_green: schemePuBuGn,\n  purple_blue: schemePuBu,\n  purple_red: schemePuRd,\n  red_purple: schemeRdPu,\n  yellow_green_blue: schemeYlGnBu,\n  yellow_green: schemeYlGn,\n  yellow_orange_brown: schemeYlOrBr,\n  yellow_orange_red: schemeYlOrRd\n};\nvar sequentialColorSchemeIds = Object.keys(sequentialColorSchemes);\n\nvar isSequentialColorScheme = function isSequentialColorScheme(scheme) {\n  return sequentialColorSchemeIds.includes(scheme);\n};\n\nvar colorSchemes = _objectSpread2(_objectSpread2(_objectSpread2({}, categoricalColorSchemes), divergingColorSchemes), sequentialColorSchemes);\n\nvar colorSchemeIds = Object.keys(colorSchemes);\nvar colorInterpolators = {\n  brown_blueGreen: interpolateBrBG,\n  purpleRed_green: interpolatePRGn,\n  pink_yellowGreen: interpolatePiYG,\n  purple_orange: interpolatePuOr,\n  red_blue: interpolateRdBu,\n  red_grey: interpolateRdGy,\n  red_yellow_blue: interpolateRdYlBu,\n  red_yellow_green: interpolateRdYlGn,\n  spectral: interpolateSpectral,\n  blues: interpolateBlues,\n  greens: interpolateGreens,\n  greys: interpolateGreys,\n  oranges: interpolateOranges,\n  purples: interpolatePurples,\n  reds: interpolateReds,\n  viridis: interpolateViridis,\n  inferno: interpolateInferno,\n  magma: interpolateMagma,\n  plasma: interpolatePlasma,\n  warm: interpolateWarm,\n  cool: interpolateCool,\n  cubehelixDefault: interpolateCubehelixDefault,\n  blue_green: interpolateBuGn,\n  blue_purple: interpolateBuPu,\n  green_blue: interpolateGnBu,\n  orange_red: interpolateOrRd,\n  purple_blue_green: interpolatePuBuGn,\n  purple_blue: interpolatePuBu,\n  purple_red: interpolatePuRd,\n  red_purple: interpolateRdPu,\n  yellow_green_blue: interpolateYlGnBu,\n  yellow_green: interpolateYlGn,\n  yellow_orange_brown: interpolateYlOrBr,\n  yellow_orange_red: interpolateYlOrRd,\n  rainbow: interpolateRainbow,\n  sinebow: interpolateSinebow\n};\nvar colorInterpolatorIds = Object.keys(colorInterpolators);\n\nvar getOrdinalColorScale = function getOrdinalColorScale(instruction, identity) {\n  if (typeof instruction === 'function') return instruction;\n  var getIdentity = typeof identity === 'function' ? identity : function (d) {\n    return get(d, identity);\n  };\n\n  if (Array.isArray(instruction)) {\n    var scale = scaleOrdinal(instruction);\n\n    var generator = function generator(d) {\n      return scale(getIdentity(d));\n    };\n\n    generator.scale = scale;\n    return generator;\n  }\n\n  if (isPlainObject(instruction)) {\n    if (instruction.datum !== undefined) {\n      return function (datum) {\n        return get(datum, instruction.datum);\n      };\n    }\n\n    if (instruction.scheme !== undefined) {\n      if (isCategoricalColorScheme(instruction.scheme)) {\n        var _scale = scaleOrdinal(colorSchemes[instruction.scheme]);\n\n        var _generator = function _generator(d) {\n          return _scale(getIdentity(d));\n        };\n\n        _generator.scale = _scale;\n        return _generator;\n      }\n\n      if (isDivergingColorScheme(instruction.scheme)) {\n        if (instruction.size !== undefined && (instruction.size < 3 || instruction.size > 11)) {\n          throw new Error(\"Invalid size '\".concat(instruction.size, \"' for diverging color scheme '\").concat(instruction.scheme, \"', must be between 3~11\"));\n        }\n\n        var _scale2 = scaleOrdinal(colorSchemes[instruction.scheme][instruction.size || 11]);\n\n        var _generator2 = function _generator2(d) {\n          return _scale2(getIdentity(d));\n        };\n\n        _generator2.scale = _scale2;\n        return _generator2;\n      }\n\n      if (isSequentialColorScheme(instruction.scheme)) {\n        if (instruction.size !== undefined && (instruction.size < 3 || instruction.size > 9)) {\n          throw new Error(\"Invalid size '\".concat(instruction.size, \"' for sequential color scheme '\").concat(instruction.scheme, \"', must be between 3~9\"));\n        }\n\n        var _scale3 = scaleOrdinal(colorSchemes[instruction.scheme][instruction.size || 9]);\n\n        var _generator3 = function _generator3(d) {\n          return _scale3(getIdentity(d));\n        };\n\n        _generator3.scale = _scale3;\n        return _generator3;\n      }\n    }\n\n    throw new Error(\"Invalid colors, when using an object, you should either pass a 'datum' or a 'scheme' property\");\n  }\n\n  return function () {\n    return instruction;\n  };\n};\n\nvar useOrdinalColorScale = function useOrdinalColorScale(instruction, identity) {\n  return useMemo(function () {\n    return getOrdinalColorScale(instruction, identity);\n  }, [instruction, identity]);\n};\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nvar getInheritedColorGenerator = function getInheritedColorGenerator(inheritedColor, theme) {\n  if (typeof inheritedColor === 'function') return function (node) {\n    return inheritedColor(node);\n  };\n\n  if (isPlainObject(inheritedColor)) {\n    if (inheritedColor.theme !== undefined) {\n      if (theme === undefined) {\n        throw new Error(\"Unable to use color from theme as no theme was provided\");\n      }\n\n      var themeColor = get(theme, inheritedColor.theme);\n\n      if (themeColor === undefined) {\n        throw new Error(\"Color from theme is undefined at path: '\".concat(inheritedColor.theme, \"'\"));\n      }\n\n      return function () {\n        return themeColor;\n      };\n    }\n\n    if (inheritedColor.from !== undefined) {\n      var getColor = function getColor(datum) {\n        return get(datum, inheritedColor.from);\n      };\n\n      if (Array.isArray(inheritedColor.modifiers)) {\n        var modifiers = [];\n\n        var _iterator = _createForOfIteratorHelper(inheritedColor.modifiers),\n            _step;\n\n        try {\n          var _loop = function _loop() {\n            var modifier = _step.value;\n\n            var _modifier = _slicedToArray(modifier, 2),\n                modifierType = _modifier[0],\n                amount = _modifier[1];\n\n            if (modifierType === 'brighter') {\n              modifiers.push(function (color) {\n                return color.brighter(amount);\n              });\n            } else if (modifierType === 'darker') {\n              modifiers.push(function (color) {\n                return color.darker(amount);\n              });\n            } else if (modifierType === 'opacity') {\n              modifiers.push(function (color) {\n                color.opacity = amount;\n                return color;\n              });\n            } else {\n              throw new Error(\"Invalid color modifier: '\".concat(modifierType, \"', must be one of: 'brighter', 'darker', 'opacity'\"));\n            }\n          };\n\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            _loop();\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        if (modifiers.length === 0) return getColor;\n        return function (datum) {\n          return modifiers.reduce(function (color, modify) {\n            return modify(color);\n          }, rgb(getColor(datum))).toString();\n        };\n      }\n\n      return getColor;\n    }\n\n    throw new Error(\"Invalid color spec, you should either specify 'theme' or 'from' when using a config object\");\n  }\n\n  return function () {\n    return inheritedColor;\n  };\n};\n\nvar useInheritedColor = function useInheritedColor(parentColor, theme) {\n  return useMemo(function () {\n    return getInheritedColorGenerator(parentColor, theme);\n  }, [parentColor, theme]);\n};\n\nvar ordinalColorsPropType = PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.string), PropTypes.shape({\n  scheme: PropTypes.oneOf(colorSchemeIds).isRequired,\n  size: PropTypes.number\n}), PropTypes.shape({\n  datum: PropTypes.string.isRequired\n}), PropTypes.string]);\nvar colorPropertyAccessorPropType = PropTypes.oneOfType([PropTypes.func, PropTypes.string]);\nvar inheritedColorPropType = PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.shape({\n  theme: PropTypes.string.isRequired\n}), PropTypes.shape({\n  from: PropTypes.string.isRequired,\n  modifiers: PropTypes.arrayOf(PropTypes.array)\n})]);\n\nvar interpolateColor = function interpolateColor(color, springConfig) {\n  var colorComponents = rgb(color);\n\n  if (!springConfig) {\n    return {\n      colorR: colorComponents.r,\n      colorG: colorComponents.g,\n      colorB: colorComponents.b\n    };\n  }\n\n  var configWithPrecision = _objectSpread2(_objectSpread2({}, springConfig), {}, {\n    precision: 1\n  });\n\n  return {\n    colorR: spring(colorComponents.r, configWithPrecision),\n    colorG: spring(colorComponents.g, configWithPrecision),\n    colorB: spring(colorComponents.b, configWithPrecision)\n  };\n};\n\nvar getInterpolatedColor = function getInterpolatedColor(_ref) {\n  var colorR = _ref.colorR,\n      colorG = _ref.colorG,\n      colorB = _ref.colorB;\n  return \"rgb(\".concat(Math.round(Math.max(colorR, 0)), \",\").concat(Math.round(Math.max(colorG, 0)), \",\").concat(Math.round(Math.max(colorB, 0)), \")\");\n};\n\nexport { categoricalColorSchemeIds, categoricalColorSchemes, colorInterpolatorIds, colorInterpolators, colorPropertyAccessorPropType, colorSchemeIds, colorSchemes, divergingColorSchemeIds, divergingColorSchemes, getInheritedColorGenerator, getInterpolatedColor, getOrdinalColorScale, inheritedColorPropType, interpolateColor, isCategoricalColorScheme, isDivergingColorScheme, isSequentialColorScheme, ordinalColorsPropType, sequentialColorSchemeIds, sequentialColorSchemes, useInheritedColor, useOrdinalColorScale };","map":{"version":3,"sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/schemes.js","../src/ordinalColorScale.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../src/inheritedColor.js","../src/props.js","../src/motion.js"],"names":["defineProperty","categoricalColorSchemes","nivo","category10","accent","dark2","paired","pastel1","pastel2","set1","set2","set3","schemeSet3","categoricalColorSchemeIds","Object","isCategoricalColorScheme","divergingColorSchemes","brown_blueGreen","purpleRed_green","pink_yellowGreen","purple_orange","red_blue","red_grey","red_yellow_blue","red_yellow_green","spectral","schemeSpectral","divergingColorSchemeIds","isDivergingColorScheme","sequentialColorSchemes","blues","greens","greys","oranges","purples","reds","blue_green","blue_purple","green_blue","orange_red","purple_blue_green","purple_blue","purple_red","red_purple","yellow_green_blue","yellow_green","yellow_orange_brown","yellow_orange_red","schemeYlOrRd","sequentialColorSchemeIds","isSequentialColorScheme","colorSchemes","colorSchemeIds","colorInterpolators","viridis","inferno","magma","plasma","warm","cool","cubehelixDefault","rainbow","sinebow","interpolateSinebow","colorInterpolatorIds","getOrdinalColorScale","getIdentity","get","Array","scale","scaleOrdinal","generator","isPlainObject","instruction","useOrdinalColorScale","useMemo","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","getInheritedColorGenerator","inheritedColor","theme","themeColor","getColor","modifiers","modifier","modifierType","amount","color","modify","rgb","useInheritedColor","ordinalColorsPropType","PropTypes","scheme","size","number","datum","isRequired","colorPropertyAccessorPropType","inheritedColorPropType","from","interpolateColor","colorComponents","colorR","colorG","colorB","b","configWithPrecision","precision","spring","getInterpolatedColor","Math"],"mappings":"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","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport {\n    // categorical\n    schemeCategory10,\n    schemeAccent,\n    schemeDark2,\n    schemePaired,\n    schemePastel1,\n    schemePastel2,\n    schemeSet1,\n    schemeSet2,\n    schemeSet3,\n    // diverging\n    interpolateBrBG,\n    schemeBrBG,\n    interpolatePRGn,\n    schemePRGn,\n    interpolatePiYG,\n    schemePiYG,\n    interpolatePuOr,\n    schemePuOr,\n    interpolateRdBu,\n    schemeRdBu,\n    interpolateRdGy,\n    schemeRdGy,\n    interpolateRdYlBu,\n    schemeRdYlBu,\n    interpolateRdYlGn,\n    schemeRdYlGn,\n    interpolateSpectral,\n    schemeSpectral,\n    // sequential single hue\n    interpolateBlues,\n    schemeBlues,\n    interpolateGreens,\n    schemeGreens,\n    interpolateGreys,\n    schemeGreys,\n    interpolateOranges,\n    schemeOranges,\n    interpolatePurples,\n    schemePurples,\n    interpolateReds,\n    schemeReds,\n    // sequential multi hue\n    interpolateViridis,\n    interpolateInferno,\n    interpolateMagma,\n    interpolatePlasma,\n    interpolateWarm,\n    interpolateCool,\n    interpolateCubehelixDefault,\n    interpolateBuGn,\n    schemeBuGn,\n    interpolateBuPu,\n    schemeBuPu,\n    interpolateGnBu,\n    schemeGnBu,\n    interpolateOrRd,\n    schemeOrRd,\n    interpolatePuBuGn,\n    schemePuBuGn,\n    interpolatePuBu,\n    schemePuBu,\n    interpolatePuRd,\n    schemePuRd,\n    interpolateRdPu,\n    schemeRdPu,\n    interpolateYlGnBu,\n    schemeYlGnBu,\n    interpolateYlGn,\n    schemeYlGn,\n    interpolateYlOrBr,\n    schemeYlOrBr,\n    interpolateYlOrRd,\n    schemeYlOrRd,\n    // cyclical\n    interpolateRainbow,\n    interpolateSinebow,\n} from 'd3-scale-chromatic'\n\n// Categorical color schemes\nexport const categoricalColorSchemes = {\n    nivo: ['#e8c1a0', '#f47560', '#f1e15b', '#e8a838', '#61cdbb', '#97e3d5'],\n    category10: schemeCategory10,\n    accent: schemeAccent,\n    dark2: schemeDark2,\n    paired: schemePaired,\n    pastel1: schemePastel1,\n    pastel2: schemePastel2,\n    set1: schemeSet1,\n    set2: schemeSet2,\n    set3: schemeSet3,\n}\nexport const categoricalColorSchemeIds = Object.keys(categoricalColorSchemes)\nexport const isCategoricalColorScheme = scheme => categoricalColorSchemeIds.includes(scheme)\n\n// Diverging color schemes support a size k ranging from 3 to 11\nexport const divergingColorSchemes = {\n    brown_blueGreen: schemeBrBG,\n    purpleRed_green: schemePRGn,\n    pink_yellowGreen: schemePiYG,\n    purple_orange: schemePuOr,\n    red_blue: schemeRdBu,\n    red_grey: schemeRdGy,\n    red_yellow_blue: schemeRdYlBu,\n    red_yellow_green: schemeRdYlGn,\n    spectral: schemeSpectral,\n}\nexport const divergingColorSchemeIds = Object.keys(divergingColorSchemes)\nexport const isDivergingColorScheme = scheme => divergingColorSchemeIds.includes(scheme)\n\n// Sequential, single-hue color schemes support a size k ranging from 3 to 9\n// Sequential, multi-hue color schemes support a size k ranging from 3 to 9\nexport const sequentialColorSchemes = {\n    // single hue\n    blues: schemeBlues,\n    greens: schemeGreens,\n    greys: schemeGreys,\n    oranges: schemeOranges,\n    purples: schemePurples,\n    reds: schemeReds,\n    // multi hue\n    blue_green: schemeBuGn,\n    blue_purple: schemeBuPu,\n    green_blue: schemeGnBu,\n    orange_red: schemeOrRd,\n    purple_blue_green: schemePuBuGn,\n    purple_blue: schemePuBu,\n    purple_red: schemePuRd,\n    red_purple: schemeRdPu,\n    yellow_green_blue: schemeYlGnBu,\n    yellow_green: schemeYlGn,\n    yellow_orange_brown: schemeYlOrBr,\n    yellow_orange_red: schemeYlOrRd,\n}\nexport const sequentialColorSchemeIds = Object.keys(sequentialColorSchemes)\nexport const isSequentialColorScheme = scheme => sequentialColorSchemeIds.includes(scheme)\n\nexport const colorSchemes = {\n    ...categoricalColorSchemes,\n    ...divergingColorSchemes,\n    ...sequentialColorSchemes,\n}\nexport const colorSchemeIds = Object.keys(colorSchemes)\n\nexport const colorInterpolators = {\n    // diverging\n    brown_blueGreen: interpolateBrBG,\n    purpleRed_green: interpolatePRGn,\n    pink_yellowGreen: interpolatePiYG,\n    purple_orange: interpolatePuOr,\n    red_blue: interpolateRdBu,\n    red_grey: interpolateRdGy,\n    red_yellow_blue: interpolateRdYlBu,\n    red_yellow_green: interpolateRdYlGn,\n    spectral: interpolateSpectral,\n    // sequential single hue\n    blues: interpolateBlues,\n    greens: interpolateGreens,\n    greys: interpolateGreys,\n    oranges: interpolateOranges,\n    purples: interpolatePurples,\n    reds: interpolateReds,\n    // sequential multi hue\n    viridis: interpolateViridis,\n    inferno: interpolateInferno,\n    magma: interpolateMagma,\n    plasma: interpolatePlasma,\n    warm: interpolateWarm,\n    cool: interpolateCool,\n    cubehelixDefault: interpolateCubehelixDefault,\n    blue_green: interpolateBuGn,\n    blue_purple: interpolateBuPu,\n    green_blue: interpolateGnBu,\n    orange_red: interpolateOrRd,\n    purple_blue_green: interpolatePuBuGn,\n    purple_blue: interpolatePuBu,\n    purple_red: interpolatePuRd,\n    red_purple: interpolateRdPu,\n    yellow_green_blue: interpolateYlGnBu,\n    yellow_green: interpolateYlGn,\n    yellow_orange_brown: interpolateYlOrBr,\n    yellow_orange_red: interpolateYlOrRd,\n    // cyclical\n    rainbow: interpolateRainbow,\n    sinebow: interpolateSinebow,\n}\n\nexport const colorInterpolatorIds = Object.keys(colorInterpolators)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useMemo } from 'react'\nimport get from 'lodash.get'\nimport isPlainObject from 'lodash.isplainobject'\nimport { scaleOrdinal } from 'd3-scale'\nimport {\n    colorSchemes,\n    isCategoricalColorScheme,\n    isSequentialColorScheme,\n    isDivergingColorScheme,\n} from './schemes'\n\n/**\n * Compute an ordinal color scale\n */\nexport const getOrdinalColorScale = (instruction, identity) => {\n    // user defined function\n    if (typeof instruction === 'function') return instruction\n\n    // compute accessor to the datum identity\n    const getIdentity = typeof identity === 'function' ? identity : d => get(d, identity)\n\n    // user defined color array\n    if (Array.isArray(instruction)) {\n        const scale = scaleOrdinal(instruction)\n        const generator = d => scale(getIdentity(d))\n        generator.scale = scale\n\n        return generator\n    }\n\n    if (isPlainObject(instruction)) {\n        // use color from current datum\n        if (instruction.datum !== undefined) {\n            return datum => get(datum, instruction.datum)\n        }\n\n        // ordinal scale from predefined scheme\n        if (instruction.scheme !== undefined) {\n            // categorical color scheme\n            if (isCategoricalColorScheme(instruction.scheme)) {\n                const scale = scaleOrdinal(colorSchemes[instruction.scheme])\n                const generator = d => scale(getIdentity(d))\n                generator.scale = scale\n\n                return generator\n            }\n\n            // Diverging color schemes support a size k ranging from 3 to 11\n            if (isDivergingColorScheme(instruction.scheme)) {\n                if (\n                    instruction.size !== undefined &&\n                    (instruction.size < 3 || instruction.size > 11)\n                ) {\n                    throw new Error(\n                        `Invalid size '${instruction.size}' for diverging color scheme '${instruction.scheme}', must be between 3~11`\n                    )\n                }\n\n                const scale = scaleOrdinal(colorSchemes[instruction.scheme][instruction.size || 11])\n                const generator = d => scale(getIdentity(d))\n                generator.scale = scale\n\n                return generator\n            }\n\n            // Sequential, single-hue color schemes support a size k ranging from 3 to 9.\n            // Sequential, multi-hue color schemes support a size k ranging from 3 to 9.\n            if (isSequentialColorScheme(instruction.scheme)) {\n                if (\n                    instruction.size !== undefined &&\n                    (instruction.size < 3 || instruction.size > 9)\n                ) {\n                    throw new Error(\n                        `Invalid size '${instruction.size}' for sequential color scheme '${instruction.scheme}', must be between 3~9`\n                    )\n                }\n\n                const scale = scaleOrdinal(colorSchemes[instruction.scheme][instruction.size || 9])\n                const generator = d => scale(getIdentity(d))\n                generator.scale = scale\n\n                return generator\n            }\n        }\n\n        throw new Error(\n            `Invalid colors, when using an object, you should either pass a 'datum' or a 'scheme' property`\n        )\n    }\n\n    return () => instruction\n}\n\nexport const useOrdinalColorScale = (instruction, identity) =>\n    useMemo(() => getOrdinalColorScale(instruction, identity), [instruction, identity])\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useMemo } from 'react'\nimport get from 'lodash.get'\nimport isPlainObject from 'lodash.isplainobject'\nimport { rgb } from 'd3-color'\n\n/**\n * Create a color generator for items which\n * might inherit from parent context,\n * for example labels, outlines…\n *\n * Support the following strategies:\n * - custom function\n * - color from theme\n * - color from parent, with optional color modifiers\n * - static color\n */\nexport const getInheritedColorGenerator = (inheritedColor, theme) => {\n    // user provided function\n    if (typeof inheritedColor === 'function') return node => inheritedColor(node)\n\n    if (isPlainObject(inheritedColor)) {\n        // use color from theme\n        if (inheritedColor.theme !== undefined) {\n            if (theme === undefined) {\n                throw new Error(`Unable to use color from theme as no theme was provided`)\n            }\n\n            const themeColor = get(theme, inheritedColor.theme)\n            if (themeColor === undefined) {\n                throw new Error(`Color from theme is undefined at path: '${inheritedColor.theme}'`)\n            }\n\n            return () => themeColor\n        }\n\n        // use color from parent with optional color modifiers\n        if (inheritedColor.from !== undefined) {\n            const getColor = datum => get(datum, inheritedColor.from)\n\n            if (Array.isArray(inheritedColor.modifiers)) {\n                const modifiers = []\n                for (const modifier of inheritedColor.modifiers) {\n                    const [modifierType, amount] = modifier\n                    if (modifierType === 'brighter') {\n                        modifiers.push(color => color.brighter(amount))\n                    } else if (modifierType === 'darker') {\n                        modifiers.push(color => color.darker(amount))\n                    } else if (modifierType === 'opacity') {\n                        modifiers.push(color => {\n                            color.opacity = amount\n\n                            return color\n                        })\n                    } else {\n                        throw new Error(\n                            `Invalid color modifier: '${modifierType}', must be one of: 'brighter', 'darker', 'opacity'`\n                        )\n                    }\n                }\n\n                if (modifiers.length === 0) return getColor\n\n                return datum =>\n                    modifiers\n                        .reduce((color, modify) => modify(color), rgb(getColor(datum)))\n                        .toString()\n            }\n\n            // no modifier\n            return getColor\n        }\n\n        throw new Error(\n            `Invalid color spec, you should either specify 'theme' or 'from' when using a config object`\n        )\n    }\n\n    // use provided color statically\n    return () => inheritedColor\n}\n\nexport const useInheritedColor = (parentColor, theme) =>\n    useMemo(() => getInheritedColorGenerator(parentColor, theme), [parentColor, theme])\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { colorSchemeIds } from './schemes'\n\nexport const ordinalColorsPropType = PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.shape({\n        scheme: PropTypes.oneOf(colorSchemeIds).isRequired,\n        size: PropTypes.number,\n    }),\n    PropTypes.shape({\n        datum: PropTypes.string.isRequired,\n    }),\n    PropTypes.string,\n])\n\nexport const colorPropertyAccessorPropType = PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n\nexport const inheritedColorPropType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.shape({\n        theme: PropTypes.string.isRequired,\n    }),\n    PropTypes.shape({\n        from: PropTypes.string.isRequired,\n        modifiers: PropTypes.arrayOf(PropTypes.array),\n    }),\n])\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { spring } from 'react-motion'\nimport { rgb } from 'd3-color'\n\n/**\n * Decompose a color to be used with react-motion.\n */\nexport const interpolateColor = (color, springConfig) => {\n    const colorComponents = rgb(color)\n\n    if (!springConfig) {\n        return {\n            colorR: colorComponents.r,\n            colorG: colorComponents.g,\n            colorB: colorComponents.b,\n        }\n    }\n\n    const configWithPrecision = {\n        ...springConfig,\n        precision: 1,\n    }\n\n    return {\n        colorR: spring(colorComponents.r, configWithPrecision),\n        colorG: spring(colorComponents.g, configWithPrecision),\n        colorB: spring(colorComponents.b, configWithPrecision),\n    }\n}\n\n/**\n * Re-assemble interpolated color components,\n * should be used to assign a color after react-motion interpolation.\n */\nexport const getInterpolatedColor = ({ colorR, colorG, colorB }) =>\n    `rgb(${Math.round(Math.max(colorR, 0))},${Math.round(Math.max(colorG, 0))},${Math.round(\n        Math.max(colorB, 0)\n    )})`\n"]},"metadata":{},"sourceType":"module"}