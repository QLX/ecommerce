{"ast":null,"code":"import _defineProperty from \"/Users/reedmurphy/Desktop/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/reedmurphy/Desktop/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/reedmurphy/Desktop/material-dashboard-react-master/src/views/Dashboard/Dashboard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\"; // react plugin for creating charts\n\nimport ChartistGraph from \"react-chartist\"; // @material-ui/core\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n\nimport Store from \"@material-ui/icons/Store\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport DateRange from \"@material-ui/icons/DateRange\";\nimport LocalOffer from \"@material-ui/icons/LocalOffer\";\nimport Update from \"@material-ui/icons/Update\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\nimport Accessibility from \"@material-ui/icons/Accessibility\";\nimport BugReport from \"@material-ui/icons/BugReport\";\nimport Code from \"@material-ui/icons/Code\";\nimport Cloud from \"@material-ui/icons/Cloud\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Table from \"components/Table/Table.js\";\nimport Tasks from \"components/Tasks/Tasks.js\";\nimport CustomTabs from \"components/CustomTabs/CustomTabs.js\";\nimport Danger from \"components/Typography/Danger.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardIcon from \"components/Card/CardIcon.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport LineGraph from \"components/Graphs/LineGraph\";\nimport BarGraph from \"components/Graphs/BarGraph\";\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport Kpi1 from \"components/KPI/Kpi1\";\nimport Kpi2 from \"components/KPI/Kpi2\";\nimport Kpi3 from \"components/KPI/Kpi3\";\nimport Kpi4 from \"components/KPI/Kpi4\";\nimport dataConverter from \"services/dataConverter\";\nimport getMonth from \"services/getMonth\";\nimport { bugs, website, server } from \"variables/general.js\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { Typography } from \"@material-ui/core\";\nvar useStyles = makeStyles(styles);\nexport default function Dashboard() {\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      kpi1 = _useState2[0],\n      updateKpi1 = _useState2[1];\n\n  var _useState3 = useState({\n    data: [],\n    keys: []\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      kpi2 = _useState4[0],\n      updateKpi2 = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      kpi3 = _useState6[0],\n      updateKpi3 = _useState6[1];\n\n  var _useState7 = useState({\n    products: {\n      today: [],\n      week: [],\n      month: [],\n      year: []\n    },\n    totalSales: {\n      today: [],\n      week: [],\n      month: [],\n      year: []\n    } // products: [],\n    // totalSales: []\n\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      kpi4 = _useState8[0],\n      updateKpi4 = _useState8[1];\n\n  useEffect(function () {\n    var currMonth = getMonth();\n    var requestOne = axios.get('http://localhost:5000/kpi1/');\n    var requestTwo = axios.get(\"http://localhost:5000/kpi2/\".concat(currMonth));\n    var requestThree = axios.get('http://localhost:5000/kpi3');\n    var requestFour = axios.get('http://localhost:5000/kpi4');\n    axios.all([requestOne, requestTwo, requestThree, requestFour]).then(axios.spread(function () {\n      for (var _len = arguments.length, responses = new Array(_len), _key = 0; _key < _len; _key++) {\n        responses[_key] = arguments[_key];\n      }\n\n      updateKpi1(responses[0].data);\n      updateKpi2({\n        data: responses[1].data[0],\n        keys: responses[1].data[1]\n      });\n      updateKpi3(responses[2].data);\n      updateKpi4(function () {\n        var _ref;\n\n        var products = responses[3].data[0];\n        var totalSales = responses[3].data[1];\n        return _ref = {\n          products: responses[3].data[0],\n          totalSales: responses[3].data[1]\n        }, _defineProperty(_ref, \"products\", {\n          today: products.map(function (datum) {\n            return {\n              \"id\": datum.id,\n              \"label\": datum.label,\n              \"value\": datum.value.today,\n              \"color\": datum.color\n            };\n          }),\n          week: products.map(function (datum) {\n            return {\n              \"id\": datum.id,\n              \"label\": datum.label,\n              \"value\": datum.value.week,\n              \"color\": datum.color\n            };\n          }),\n          month: products.map(function (datum) {\n            return {\n              \"id\": datum.id,\n              \"label\": datum.label,\n              \"value\": datum.value.month,\n              \"color\": datum.color\n            };\n          }),\n          year: products.map(function (datum) {\n            return {\n              \"id\": datum.id,\n              \"label\": datum.label,\n              \"value\": datum.value.year,\n              \"color\": datum.color\n            };\n          })\n        }), _defineProperty(_ref, \"totalSales\", {\n          today: totalSales.map(function (datum) {\n            return {\n              \"id\": datum.id,\n              \"label\": datum.label,\n              \"value\": datum.value.today,\n              \"color\": datum.color\n            };\n          }),\n          week: totalSales.map(function (datum) {\n            return {\n              \"id\": datum.id,\n              \"label\": datum.label,\n              \"value\": datum.value.week,\n              \"color\": datum.color\n            };\n          }),\n          month: totalSales.map(function (datum) {\n            return {\n              \"id\": datum.id,\n              \"label\": datum.label,\n              \"value\": datum.value.month,\n              \"color\": datum.color\n            };\n          }),\n          year: totalSales.map(function (datum) {\n            return {\n              \"id\": datum.id,\n              \"label\": datum.label,\n              \"value\": datum.value.year,\n              \"color\": datum.color\n            };\n          })\n        }), _ref;\n      });\n    }))[\"catch\"](function (errors) {\n      return console.log(errors);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Kpi1, {\n    kpi1: kpi1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Kpi4, {\n    products: kpi4.products,\n    totalSales: kpi4.totalSales,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(GridContainer, {\n    style: {\n      marginTop: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Kpi2, {\n    data: kpi2.data,\n    keys: kpi2.keys,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    style: {\n      marginTop: \"3vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Kpi3, {\n    rows: kpi3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/reedmurphy/Desktop/material-dashboard-react-master/src/views/Dashboard/Dashboard.js"],"names":["React","useState","useEffect","axios","ChartistGraph","makeStyles","Icon","Store","Warning","DateRange","LocalOffer","Update","ArrowUpward","AccessTime","Accessibility","BugReport","Code","Cloud","GridItem","GridContainer","Table","Tasks","CustomTabs","Danger","Card","CardHeader","CardIcon","CardBody","CardFooter","LineGraph","BarGraph","AttachMoneyIcon","MonetizationOnIcon","Kpi1","Kpi2","Kpi3","Kpi4","dataConverter","getMonth","bugs","website","server","styles","Typography","useStyles","Dashboard","classes","kpi1","updateKpi1","data","keys","kpi2","updateKpi2","kpi3","updateKpi3","products","today","week","month","year","totalSales","kpi4","updateKpi4","currMonth","requestOne","get","requestTwo","requestThree","requestFour","all","then","spread","responses","map","datum","id","label","value","color","errors","console","log","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// react plugin for creating charts\nimport ChartistGraph from \"react-chartist\";\n// @material-ui/core\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\";\n// @material-ui/icons\nimport Store from \"@material-ui/icons/Store\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport DateRange from \"@material-ui/icons/DateRange\";\nimport LocalOffer from \"@material-ui/icons/LocalOffer\";\nimport Update from \"@material-ui/icons/Update\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\nimport Accessibility from \"@material-ui/icons/Accessibility\";\nimport BugReport from \"@material-ui/icons/BugReport\";\nimport Code from \"@material-ui/icons/Code\";\nimport Cloud from \"@material-ui/icons/Cloud\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Table from \"components/Table/Table.js\";\nimport Tasks from \"components/Tasks/Tasks.js\";\nimport CustomTabs from \"components/CustomTabs/CustomTabs.js\";\nimport Danger from \"components/Typography/Danger.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardIcon from \"components/Card/CardIcon.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\n\nimport LineGraph from \"components/Graphs/LineGraph\";\nimport BarGraph from \"components/Graphs/BarGraph\";\n\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\n\nimport Kpi1 from \"components/KPI/Kpi1\";\nimport Kpi2 from \"components/KPI/Kpi2\";\nimport Kpi3 from \"components/KPI/Kpi3\";\nimport Kpi4 from \"components/KPI/Kpi4\";\n\nimport dataConverter from \"services/dataConverter\";\n\nimport getMonth from \"services/getMonth\";\n\nimport { bugs, website, server } from \"variables/general.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(styles);\n\n\nexport default function Dashboard() {\n  const classes = useStyles();\n\n  const [kpi1, updateKpi1] = useState([]);\n  const [kpi2, updateKpi2] = useState({\n    data: [],\n    keys: []\n  });\n  const [kpi3, updateKpi3] = useState([]);\n  const [kpi4, updateKpi4] = useState({\n    products: {\n      today: [],\n      week: [],\n      month: [],\n      year: []\n    },\n    totalSales: {\n      today: [],\n      week: [],\n      month: [],\n      year: []\n    },\n\n    // products: [],\n    // totalSales: []\n  });\n\n  useEffect(() => {\n\n    const currMonth = getMonth();\n\n    const requestOne = axios.get('http://localhost:5000/kpi1/');\n    const requestTwo = axios.get(`http://localhost:5000/kpi2/${currMonth}`);\n    const requestThree = axios.get('http://localhost:5000/kpi3');\n    const requestFour = axios.get('http://localhost:5000/kpi4');\n\n    axios.all([requestOne, requestTwo, requestThree, requestFour])\n      .then(axios.spread((...responses) => {\n        updateKpi1(responses[0].data);\n        updateKpi2({\n          data: responses[1].data[0],\n          keys: responses[1].data[1]\n        });\n        updateKpi3(responses[2].data);\n        updateKpi4(() => {\n          const products = responses[3].data[0];\n          const totalSales = responses[3].data[1];\n          return {\n            products: responses[3].data[0],\n            totalSales: responses[3].data[1],\n            products: {\n              today: products.map(datum => {\n                return {\n                  \"id\": datum.id,\n                  \"label\": datum.label,\n                  \"value\": datum.value.today,\n                  \"color\": datum.color\n                }\n              }),\n              week: products.map(datum => {\n                return {\n                  \"id\": datum.id,\n                  \"label\": datum.label,\n                  \"value\": datum.value.week,\n                  \"color\": datum.color\n                }\n              }),\n              month: products.map(datum => {\n                return {\n                  \"id\": datum.id,\n                  \"label\": datum.label,\n                  \"value\": datum.value.month,\n                  \"color\": datum.color\n                }\n              }),\n              year: products.map(datum => {\n                return {\n                  \"id\": datum.id,\n                  \"label\": datum.label,\n                  \"value\": datum.value.year,\n                  \"color\": datum.color\n                }\n              })\n            },\n            totalSales: {\n              today: totalSales.map(datum => {\n                return {\n                  \"id\": datum.id,\n                  \"label\": datum.label,\n                  \"value\": datum.value.today,\n                  \"color\": datum.color\n                }\n              }),\n              week: totalSales.map(datum => {\n                return {\n                  \"id\": datum.id,\n                  \"label\": datum.label,\n                  \"value\": datum.value.week,\n                  \"color\": datum.color\n                }\n              }),\n              month: totalSales.map(datum => {\n                return {\n                  \"id\": datum.id,\n                  \"label\": datum.label,\n                  \"value\": datum.value.month,\n                  \"color\": datum.color\n                }\n              }),\n              year: totalSales.map(datum => {\n                return {\n                  \"id\": datum.id,\n                  \"label\": datum.label,\n                  \"value\": datum.value.year,\n                  \"color\": datum.color\n                }\n              })\n            }\n          }\n          \n        });\n      }))\n      .catch(errors => console.log(errors));\n\n  }, []);\n\n  return (\n    <div>\n      <Kpi1 kpi1={kpi1} />\n      <Kpi4 products={kpi4.products} totalSales={kpi4.totalSales} />\n      <GridContainer style={{ marginTop: \"50px\" }}>\n        <GridItem xs={12} sm={12} md={6}>\n          <Kpi2 data={kpi2.data} keys={kpi2.keys} />\n        </GridItem>\n        <GridItem xs={12} sm={12} md={6} style={{ marginTop: \"3vh\"}}>\n          <Kpi3 rows={kpi3} />\n        </GridItem>\n        {/* <GridItem xs={12} sm={12} md={6}>\n          <Card chart>\n            <CardHeader color=\"warning\"> */}\n              {/* <BarGraph /> */}\n            {/* </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>Email Subscriptions</h4>\n              <p className={classes.cardCategory}>Last Campaign Performance</p>\n            </CardBody>\n            <CardFooter chart>\n              <div className={classes.stats}>\n                <AccessTime /> campaign sent 2 days ago\n                </div>\n            </CardFooter>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card chart>\n            <CardHeader color=\"info\"> */}\n              {/* <LineGraph data={kpi2} height={250} /> */}\n            {/* </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>Completed Tasks</h4>\n              <p className={classes.cardCategory}>Last Campaign Performance</p>\n            </CardBody>\n            <CardFooter chart>\n              <div className={classes.stats}>\n                <AccessTime /> campaign sent 2 days ago\n                </div>\n            </CardFooter>\n          </Card>\n        </GridItem>\n      </GridContainer>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={6}>\n          <CustomTabs\n            title=\"Tasks:\"\n            headerColor=\"primary\"\n            tabs={[\n              {\n                tabName: \"Bugs\",\n                tabIcon: BugReport,\n                tabContent: (\n                  <Tasks\n                    checkedIndexes={[0, 3]}\n                    tasksIndexes={[0, 1, 2, 3]}\n                    tasks={bugs}\n                  />\n                )\n              },\n              {\n                tabName: \"Website\",\n                tabIcon: Code,\n                tabContent: (\n                  <Tasks\n                    checkedIndexes={[0]}\n                    tasksIndexes={[0, 1]}\n                    tasks={website}\n                  />\n                )\n              },\n              {\n                tabName: \"Server\",\n                tabIcon: Cloud,\n                tabContent: (\n                  <Tasks\n                    checkedIndexes={[1]}\n                    tasksIndexes={[0, 1, 2]}\n                    tasks={server}\n                  />\n                )\n              }\n            ]}\n          />\n        </GridItem>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card>\n            <CardHeader color=\"warning\">\n              <h4 className={classes.cardTitleWhite}>Employees Stats</h4>\n              <p className={classes.cardCategoryWhite}>\n                New employees on 15th September, 2016\n                </p>\n            </CardHeader>\n            <CardBody>\n              <Table\n                tableHeaderColor=\"warning\"\n                tableHead={[\"ID\", \"Name\", \"Salary\", \"Country\"]}\n                tableData={[\n                  [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\"],\n                  [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\"],\n                  [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\"],\n                  [\"4\", \"Philip Chaney\", \"$38,735\", \"Korea, South\"]\n                ]}\n              />\n            </CardBody>\n          </Card>\n        </GridItem> */}\n      </GridContainer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}