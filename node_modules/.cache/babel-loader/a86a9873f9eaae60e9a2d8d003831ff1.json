{"ast":null,"code":"import _slicedToArray from \"/Users/reedmurphy/Desktop/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/reedmurphy/Desktop/material-dashboard-react-master/src/components/Graphs/BarGraph.jsx\";\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ResponsiveContainer } from 'recharts';\nimport dataConverter from \"services/dataConverter\";\nvar origDataFormat = {\n  labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"Mai\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n  series: {\n    \"Subcriptions\": [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]\n  }\n};\nexport default function BarGraph(props) {\n  var _this = this;\n\n  var colors = [\"#fea320\", \"#932bad\", \"#eb4946\", \"#19bcd0\"];\n\n  var _dataConverter = dataConverter(origDataFormat),\n      _dataConverter2 = _slicedToArray(_dataConverter, 2),\n      realData = _dataConverter2[0],\n      keys = _dataConverter2[1];\n\n  return /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"110%\",\n    height: 250,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    data: realData,\n    margin: {\n      top: 5,\n      right: 60,\n      left: -40,\n      bottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \">\", /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }), keys.map(function (key, index) {\n    return /*#__PURE__*/React.createElement(Bar, {\n      dataKey: key,\n      fill: colors[index],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 43\n      }\n    });\n  })));\n}","map":{"version":3,"sources":["/Users/reedmurphy/Desktop/material-dashboard-react-master/src/components/Graphs/BarGraph.jsx"],"names":["React","BarChart","Bar","XAxis","YAxis","Tooltip","CartesianGrid","Legend","ResponsiveContainer","dataConverter","origDataFormat","labels","series","BarGraph","props","colors","realData","keys","top","right","left","bottom","map","key","index"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,KAAxB,EAA+BC,KAA/B,EAAsCC,OAAtC,EAA+CC,aAA/C,EAA8DC,MAA9D,EAAsEC,mBAAtE,QAAiG,UAAjG;AAEA,OAAOC,aAAP,MAA0B,wBAA1B;AAEA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,CACJ,KADI,EAEJ,KAFI,EAGJ,KAHI,EAIJ,KAJI,EAKJ,KALI,EAMJ,KANI,EAOJ,KAPI,EAQJ,KARI,EASJ,KATI,EAUJ,KAVI,EAWJ,KAXI,EAYJ,KAZI,CADW;AAenBC,EAAAA,MAAM,EAAE;AAAE,oBAAgB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD;AAAlB;AAfW,CAAvB;AAkBA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACpC,MAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAf;;AADoC,uBAEXN,aAAa,CAACC,cAAD,CAFF;AAAA;AAAA,MAE7BM,QAF6B;AAAA,MAEnBC,IAFmB;;AAIpC,sBACI,oBAAC,mBAAD;AAAqB,IAAA,KAAK,EAAC,MAA3B;AAAkC,IAAA,MAAM,EAAE,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAED,QAAhB;AACA,IAAA,MAAM,EAAE;AAAEE,MAAAA,GAAG,EAAE,CAAP;AAAUC,MAAAA,KAAK,EAAE,EAAjB;AAAqBC,MAAAA,IAAI,EAAE,CAAC,EAA5B;AAAgCC,MAAAA,MAAM,EAAE;AAAxC,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEI,oBAAC,aAAD;AAAe,IAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAMI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOKJ,IAAI,CAACK,GAAL,CAAS,UAACC,GAAD,EAAMC,KAAN;AAAA,wBAAgB,oBAAC,GAAD;AAAK,MAAA,OAAO,EAAED,GAAd;AAAmB,MAAA,IAAI,EAAER,MAAM,CAACS,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB;AAAA,GAAT,CAPL,CADJ,CADJ;AAcH","sourcesContent":["import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ResponsiveContainer } from 'recharts';\n\nimport dataConverter from \"services/dataConverter\";\n\nconst origDataFormat = {\n    labels: [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"Mai\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\",\n        \"Nov\",\n        \"Dec\"\n    ],\n    series: { \"Subcriptions\": [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895] }\n}\n\nexport default function BarGraph(props) {\n    const colors = [\"#fea320\", \"#932bad\", \"#eb4946\", \"#19bcd0\"];\n    const [realData, keys] = dataConverter(origDataFormat);\n\n    return (\n        <ResponsiveContainer width=\"110%\" height={250}>\n            <BarChart data={realData}\n            margin={{ top: 5, right: 60, left: -40, bottom: 5 }}>>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                {keys.map((key, index) => <Bar dataKey={key} fill={colors[index]} />)}\n            </BarChart>\n        </ResponsiveContainer>\n    )\n\n}\n"]},"metadata":{},"sourceType":"module"}