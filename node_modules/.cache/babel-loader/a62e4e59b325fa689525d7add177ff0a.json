{"ast":null,"code":"import _defineProperty from \"/Users/reedmurphy/Desktop/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/reedmurphy/Desktop/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/reedmurphy/Desktop/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/reedmurphy/Desktop/material-dashboard-react-master/src/views/PML/PML.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport XLSX from 'xlsx';\nimport FileSaver from \"file-saver\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport TextField from '@material-ui/core/TextField';\nvar StyledTableCell = withStyles(function () {\n  return {\n    head: {\n      backgroundColor: '#3f51b5',\n      color: 'white'\n    },\n    body: {\n      fontSize: 14\n    }\n  };\n})(TableCell);\nvar StyledTableRow = withStyles(function () {\n  return {\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: '#f5f5f5'\n      }\n    }\n  };\n})(TableRow);\nexport default function TableFromScratch() {\n  var _this = this;\n\n  var _useState = useState({\n    originalData: [],\n    currentData: [],\n    keys: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      updateData = _useState2[1];\n\n  var _useState3 = useState({\n    status: false,\n    rowKey: null,\n    columnName: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inEditMode = _useState4[0],\n      setInEditMode = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      value = _useState6[0],\n      changeValue = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      page = _useState8[0],\n      setPage = _useState8[1];\n\n  var _useState9 = useState(5),\n      _useState10 = _slicedToArray(_useState9, 2),\n      rowsPerPage = _useState10[0],\n      setRowsPerPage = _useState10[1];\n\n  var fetchInventory = function fetchInventory() {\n    axios.get('http://localhost:5000/test/').then(function (res) {\n      return updateData({\n        originalData: res.data[0],\n        currentData: res.data[0],\n        keys: res.data[1]\n      });\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  };\n\n  useEffect(function () {\n    fetchInventory();\n  }, []); // /**\n  //  *\n  //  * @param id - The id of the product\n  //  * @param currentUnitPrice - The current unit price of the product\n  //  */\n\n  var onEdit = function onEdit(_ref) {\n    var UPC = _ref.UPC,\n        columnName = _ref.columnName;\n    setInEditMode({\n      status: true,\n      rowKey: UPC,\n      columnName: columnName\n    }); // setUnitPrice(currentUnitPrice);\n  }; // /**\n  //  *\n  //  * @param id\n  //  * @param newUnitPrice\n  //  */\n\n\n  var updateInventory = function updateInventory(_ref2) {\n    var UPC = _ref2.UPC,\n        newUnitPrice = _ref2.newUnitPrice;\n    axios.post('http://localhost:5000/test/', {\n      UPC: UPC,\n      newUnitPrice: newUnitPrice\n    }).then(function () {\n      onCancel();\n      fetchInventory();\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  }; // /**\n  //  *\n  //  * @param id -The id of the product\n  //  * @param newUnitPrice - The new unit price of the product\n  //  */\n\n\n  var onSave = function onSave(_ref3) {\n    var UPC = _ref3.UPC,\n        columnName = _ref3.columnName;\n    updateData(function (prevValue) {\n      return {\n        originalData: prevValue.originalData,\n        keys: prevValue.keys,\n        currentData: prevValue.currentData.map(function (datum) {\n          if (datum.UPC === UPC) {\n            var _objectSpread2;\n\n            return _objectSpread(_objectSpread({}, datum), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, columnName, parseFloat(value)), _defineProperty(_objectSpread2, \"TotalProductCost\", (datum.TotalProductCost * parseFloat(value)).toFixed(2)), _defineProperty(_objectSpread2, \"Profit\", (datum.Profit * parseFloat(value)).toFixed(2)), _defineProperty(_objectSpread2, \"Margin\", (datum.Margin * parseFloat(value)).toFixed(2)), _defineProperty(_objectSpread2, \"ROI\", (datum.ROI * parseFloat(value)).toFixed(2)), _defineProperty(_objectSpread2, \"New_Price_Factor\", (datum.New_Price_Factor * parseFloat(value)).toFixed(2)), _defineProperty(_objectSpread2, \"New_Price\", (datum.New_Price * parseFloat(value)).toFixed(2)), _defineProperty(_objectSpread2, \"New_Referral_Fee\", (datum.New_Referral_Fee * parseFloat(value)).toFixed(2)), _defineProperty(_objectSpread2, \"New_Profit\", (datum.New_Profit * parseFloat(value)).toFixed(2)), _defineProperty(_objectSpread2, \"New_Margin\", (datum.New_Margin * parseFloat(value)).toFixed(2)), _defineProperty(_objectSpread2, \"New_ROI\", (datum.New_ROI * parseFloat(value)).toFixed(2)), _defineProperty(_objectSpread2, \"Min_Price\", (datum.Min_Price * parseFloat(value)).toFixed(2)), _defineProperty(_objectSpread2, \"Max_Price\", (datum.Max_Price * parseFloat(value)).toFixed(2)), _objectSpread2));\n          } else {\n            return datum;\n          }\n        })\n      };\n    });\n    onCancel();\n  };\n\n  function onCancel() {\n    // reset the inEditMode state value\n    setTimeout(function () {\n      setInEditMode({\n        status: false,\n        rowKey: null,\n        columnName: \"\"\n      });\n    }, 1); // reset the unit price state value\n\n    changeValue(null);\n  }\n\n  function conditionalStyle(columnName, item, index) {\n    return item[columnName] !== data.originalData[index][columnName] ? item[columnName] > data.originalData[index][columnName] ? {\n      backgroundColor: '#55ae59'\n    } : {\n      backgroundColor: '#ea4845'\n    } : null;\n  }\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  function exportToExcel() {\n    var wb = XLSX.utils.book_new();\n    wb.Props = {\n      Title: \"Ecommerce PML Data\",\n      Subject: \"Ecommerce PML Data\",\n      Author: \"Qualex\",\n      CreatedDate: new Date()\n    };\n    wb.SheetNames.push(\"Ecommerce PML Data\");\n    var ws_data = data.currentData; //a row with 2 columns\n\n    var ws = XLSX.utils.json_to_sheet(ws_data);\n    wb.Sheets[\"Ecommerce PML Data\"] = ws;\n    var wbout = XLSX.write(wb, {\n      bookType: 'xlsx',\n      type: 'binary'\n    });\n\n    function s2ab(s) {\n      var buf = new ArrayBuffer(s.length); //convert s to arrayBuffer\n\n      var view = new Uint8Array(buf); //create uint8array as viewer\n\n      for (var i = 0; i < s.length; i++) {\n        view[i] = s.charCodeAt(i) & 0xFF;\n      } //convert to octet\n\n\n      return buf;\n    } // const file = new Blob(([s2ab(wbout)],{type:\"application/octet-stream\"}), 'test.xlsx');\n\n\n    var file = new File([s2ab(wbout)], \"ecommerce-pml-data.xlsx\", {\n      type: \"application/octet-stream\"\n    });\n    FileSaver.saveAs(file);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, \"Product Master List\"), /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"#3f51b5\",\n      color: \"white\",\n      padding: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    variant: \"contained\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return exportToExcel();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 33\n    }\n  }, \"Export to Excel\"), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 33\n    }\n  }, \"Add to Repricing\"))))), /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 29\n    }\n  }), data.keys.map(function (title) {\n    return /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 53\n      }\n    }, title);\n  }))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }, data.currentData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (item, index) {\n    return /*#__PURE__*/React.createElement(StyledTableRow, {\n      key: item.UPC,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 58\n      }\n    })), /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 41\n      }\n    }, item.UPC), /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 41\n      }\n    }, item.ASIN), /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 41\n      }\n    }, item.SKU), /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 41\n      }\n    }, item.Title), /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 41\n      }\n    }, item.Brand), /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 41\n      }\n    }, item.ProductCost), /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 41\n      }\n    }, item.unitWeight), /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 41\n      }\n    }, item.ShippingCost), /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 41\n      }\n    }, item.ReferralFee), /*#__PURE__*/React.createElement(StyledTableCell, {\n      onClick: function onClick() {\n        return onEdit({\n          UPC: item.UPC,\n          columnName: \"PackagingFactor\"\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 41\n      }\n    }, inEditMode.status && inEditMode.rowKey === item.UPC && inEditMode.columnName === \"PackagingFactor\" ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      value: value,\n      placeholder: item.PackagingFactor,\n      onChange: function onChange(event) {\n        return changeValue(event.target.value);\n      },\n      onKeyPress: function onKeyPress(event) {\n        return keyPress();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return onSave({\n          UPC: item.UPC,\n          columnName: \"PackagingFactor\"\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 57\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        marginLeft: 8\n      },\n      onClick: function onClick() {\n        return onCancel();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 57\n      }\n    }, \"Cancel\")) : item.PackagingFactor), /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 41\n      }\n    }, item.BuyBoxPrice), /*#__PURE__*/React.createElement(StyledTableCell, {\n      style: conditionalStyle(\"TotalProductCost\", item, index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 41\n      }\n    }, item.TotalProductCost), /*#__PURE__*/React.createElement(StyledTableCell, {\n      style: conditionalStyle(\"Profit\", item, index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 41\n      }\n    }, item.Profit), /*#__PURE__*/React.createElement(StyledTableCell, {\n      style: conditionalStyle(\"Margin\", item, index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 41\n      }\n    }, item.Margin), /*#__PURE__*/React.createElement(StyledTableCell, {\n      style: conditionalStyle(\"ROI\", item, index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 41\n      }\n    }, item.ROI), /*#__PURE__*/React.createElement(StyledTableCell, {\n      onClick: function onClick() {\n        return onEdit({\n          UPC: item.UPC,\n          columnName: \"Variable_Margin\"\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 41\n      }\n    }, inEditMode.status && inEditMode.rowKey === item.UPC && inEditMode.columnName === \"Variable_Margin\" ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: value,\n      placeholder: item.Variable_Margin,\n      onChange: function onChange(event) {\n        return changeValue(event.target.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return onSave({\n          UPC: item.UPC,\n          columnName: \"Variable_Margin\"\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 57\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        marginLeft: 8\n      },\n      onClick: function onClick() {\n        return onCancel();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 57\n      }\n    }, \"Cancel\")) : item.Variable_Margin), /*#__PURE__*/React.createElement(StyledTableCell, {\n      style: conditionalStyle(\"New_Price_Factor\", item, index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 41\n      }\n    }, item.New_Price_Factor), /*#__PURE__*/React.createElement(StyledTableCell, {\n      style: conditionalStyle(\"New_Price\", item, index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 41\n      }\n    }, item.New_Price), /*#__PURE__*/React.createElement(StyledTableCell, {\n      style: conditionalStyle(\"New_Referral_Fee\", item, index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 41\n      }\n    }, item.New_Referral_Fee), /*#__PURE__*/React.createElement(StyledTableCell, {\n      style: conditionalStyle(\"New_Profit\", item, index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 41\n      }\n    }, item.New_Profit), /*#__PURE__*/React.createElement(StyledTableCell, {\n      style: conditionalStyle(\"New_Margin\", item, index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 41\n      }\n    }, item.New_Margin), /*#__PURE__*/React.createElement(StyledTableCell, {\n      style: conditionalStyle(\"New_ROI\", item, index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 41\n      }\n    }, item.New_ROI), /*#__PURE__*/React.createElement(StyledTableCell, {\n      style: conditionalStyle(\"Min_Price\", item, index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 41\n      }\n    }, item.Min_Price), /*#__PURE__*/React.createElement(StyledTableCell, {\n      style: conditionalStyle(\"Max_Price\", item, index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 41\n      }\n    }, item.Max_Price), /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 41\n      }\n    }, item.Match_Buy_Box), /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 41\n      }\n    }, item.Channel), /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 41\n      }\n    }, item.BSR), /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 41\n      }\n    }, item.Quantity), /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 41\n      }\n    }, item.Rating));\n  })))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: data.currentData.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    style: {\n      backgroundColor: \"#3f51b5\",\n      borderRadius: \"2px\",\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/reedmurphy/Desktop/material-dashboard-react-master/src/views/PML/PML.js"],"names":["React","useState","useEffect","axios","XLSX","FileSaver","Checkbox","withStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TablePagination","Grid","Typography","Button","ButtonGroup","TextField","StyledTableCell","head","backgroundColor","color","body","fontSize","StyledTableRow","root","TableFromScratch","originalData","currentData","keys","data","updateData","status","rowKey","columnName","inEditMode","setInEditMode","value","changeValue","page","setPage","rowsPerPage","setRowsPerPage","fetchInventory","get","then","res","err","console","log","onEdit","UPC","updateInventory","newUnitPrice","post","onCancel","onSave","prevValue","map","datum","parseFloat","TotalProductCost","toFixed","Profit","Margin","ROI","New_Price_Factor","New_Price","New_Referral_Fee","New_Profit","New_Margin","New_ROI","Min_Price","Max_Price","setTimeout","conditionalStyle","item","index","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","exportToExcel","wb","utils","book_new","Props","Title","Subject","Author","CreatedDate","Date","SheetNames","push","ws_data","ws","json_to_sheet","Sheets","wbout","write","bookType","type","s2ab","s","buf","ArrayBuffer","length","view","Uint8Array","i","charCodeAt","file","File","saveAs","padding","title","slice","ASIN","SKU","Brand","ProductCost","unitWeight","ShippingCost","ReferralFee","PackagingFactor","keyPress","marginLeft","BuyBoxPrice","Variable_Margin","Match_Buy_Box","Channel","BSR","Quantity","Rating","borderRadius"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,IAAMC,eAAe,GAAGb,UAAU,CAAC;AAAA,SAAO;AACtCc,IAAAA,IAAI,EAAE;AACFC,MAAAA,eAAe,EAAE,SADf;AAEFC,MAAAA,KAAK,EAAE;AAFL,KADgC;AAKtCC,IAAAA,IAAI,EAAE;AACFC,MAAAA,QAAQ,EAAE;AADR;AALgC,GAAP;AAAA,CAAD,CAAV,CAQpBf,SARoB,CAAxB;AAUA,IAAMgB,cAAc,GAAGnB,UAAU,CAAC;AAAA,SAAO;AACrCoB,IAAAA,IAAI,EAAE;AACF,4BAAsB;AAClBL,QAAAA,eAAe,EAAE;AADC;AADpB;AAD+B,GAAP;AAAA,CAAD,CAAV,CAMnBT,QANmB,CAAvB;AAQA,eAAe,SAASe,gBAAT,GAA4B;AAAA;;AAAA,kBAEZ3B,QAAQ,CAAC;AAChC4B,IAAAA,YAAY,EAAE,EADkB;AAEhCC,IAAAA,WAAW,EAAE,EAFmB;AAGhCC,IAAAA,IAAI,EAAE;AAH0B,GAAD,CAFI;AAAA;AAAA,MAEhCC,IAFgC;AAAA,MAE1BC,UAF0B;;AAAA,mBAQHhC,QAAQ,CAAC;AACzCiC,IAAAA,MAAM,EAAE,KADiC;AAEzCC,IAAAA,MAAM,EAAE,IAFiC;AAGzCC,IAAAA,UAAU,EAAE;AAH6B,GAAD,CARL;AAAA;AAAA,MAQhCC,UARgC;AAAA,MAQpBC,aARoB;;AAAA,mBAcVrC,QAAQ,CAAC,IAAD,CAdE;AAAA;AAAA,MAchCsC,KAdgC;AAAA,MAczBC,WAdyB;;AAAA,mBAgBfvC,QAAQ,CAAC,CAAD,CAhBO;AAAA;AAAA,MAgBhCwC,IAhBgC;AAAA,MAgB1BC,OAhB0B;;AAAA,mBAiBDzC,QAAQ,CAAC,CAAD,CAjBP;AAAA;AAAA,MAiBhC0C,WAjBgC;AAAA,MAiBnBC,cAjBmB;;AAmBvC,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB1C,IAAAA,KAAK,CAAC2C,GAAN,CAAU,6BAAV,EACKC,IADL,CACU,UAAAC,GAAG;AAAA,aAAIf,UAAU,CAAC;AACpBJ,QAAAA,YAAY,EAAEmB,GAAG,CAAChB,IAAJ,CAAS,CAAT,CADM;AAEpBF,QAAAA,WAAW,EAAEkB,GAAG,CAAChB,IAAJ,CAAS,CAAT,CAFO;AAGpBD,QAAAA,IAAI,EAAEiB,GAAG,CAAChB,IAAJ,CAAS,CAAT;AAHc,OAAD,CAAd;AAAA,KADb,WAMW,UAAAiB,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KANd;AAQH,GATD;;AAWA/C,EAAAA,SAAS,CAAC,YAAM;AACZ2C,IAAAA,cAAc;AACjB,GAFQ,EAEN,EAFM,CAAT,CA9BuC,CAkCvC;AACA;AACA;AACA;AACA;;AACA,MAAMO,MAAM,GAAG,SAATA,MAAS,OAAyB;AAAA,QAAtBC,GAAsB,QAAtBA,GAAsB;AAAA,QAAjBjB,UAAiB,QAAjBA,UAAiB;AACpCE,IAAAA,aAAa,CAAC;AACVJ,MAAAA,MAAM,EAAE,IADE;AAEVC,MAAAA,MAAM,EAAEkB,GAFE;AAGVjB,MAAAA,UAAU,EAAEA;AAHF,KAAD,CAAb,CADoC,CAMpC;AACH,GAPD,CAvCuC,CAgDvC;AACA;AACA;AACA;AACA;;;AACA,MAAMkB,eAAe,GAAG,SAAlBA,eAAkB,QAA2B;AAAA,QAAxBD,GAAwB,SAAxBA,GAAwB;AAAA,QAAnBE,YAAmB,SAAnBA,YAAmB;AAC/CpD,IAAAA,KAAK,CAACqD,IAAN,CAAW,6BAAX,EAA0C;AAAEH,MAAAA,GAAG,EAAHA,GAAF;AAAOE,MAAAA,YAAY,EAAZA;AAAP,KAA1C,EACKR,IADL,CACU,YAAM;AACRU,MAAAA,QAAQ;AACRZ,MAAAA,cAAc;AACjB,KAJL,WAKW,UAAAI,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KALd;AAMH,GAPD,CArDuC,CA8DvC;AACA;AACA;AACA;AACA;;;AACA,MAAMS,MAAM,GAAG,SAATA,MAAS,QAAyB;AAAA,QAAtBL,GAAsB,SAAtBA,GAAsB;AAAA,QAAjBjB,UAAiB,SAAjBA,UAAiB;AACpCH,IAAAA,UAAU,CAAC,UAAA0B,SAAS,EAAI;AACpB,aAAO;AACH9B,QAAAA,YAAY,EAAE8B,SAAS,CAAC9B,YADrB;AAEHE,QAAAA,IAAI,EAAE4B,SAAS,CAAC5B,IAFb;AAGHD,QAAAA,WAAW,EAAE6B,SAAS,CAAC7B,WAAV,CAAsB8B,GAAtB,CAA0B,UAAAC,KAAK,EAAI;AAC5C,cAAIA,KAAK,CAACR,GAAN,KAAcA,GAAlB,EAAuB;AAAA;;AACnB,mDACOQ,KADP,6DAEKzB,UAFL,EAEkB0B,UAAU,CAACvB,KAAD,CAF5B,uDAGsB,CAACsB,KAAK,CAACE,gBAAN,GAAyBD,UAAU,CAACvB,KAAD,CAApC,EAA6CyB,OAA7C,CAAqD,CAArD,CAHtB,6CAIY,CAACH,KAAK,CAACI,MAAN,GAAeH,UAAU,CAACvB,KAAD,CAA1B,EAAmCyB,OAAnC,CAA2C,CAA3C,CAJZ,6CAKY,CAACH,KAAK,CAACK,MAAN,GAAeJ,UAAU,CAACvB,KAAD,CAA1B,EAAmCyB,OAAnC,CAA2C,CAA3C,CALZ,0CAMS,CAACH,KAAK,CAACM,GAAN,GAAYL,UAAU,CAACvB,KAAD,CAAvB,EAAgCyB,OAAhC,CAAwC,CAAxC,CANT,uDAOsB,CAACH,KAAK,CAACO,gBAAN,GAAyBN,UAAU,CAACvB,KAAD,CAApC,EAA6CyB,OAA7C,CAAqD,CAArD,CAPtB,gDAQe,CAACH,KAAK,CAACQ,SAAN,GAAkBP,UAAU,CAACvB,KAAD,CAA7B,EAAsCyB,OAAtC,CAA8C,CAA9C,CARf,uDASsB,CAACH,KAAK,CAACS,gBAAN,GAAyBR,UAAU,CAACvB,KAAD,CAApC,EAA6CyB,OAA7C,CAAqD,CAArD,CATtB,iDAUgB,CAACH,KAAK,CAACU,UAAN,GAAmBT,UAAU,CAACvB,KAAD,CAA9B,EAAuCyB,OAAvC,CAA+C,CAA/C,CAVhB,iDAWgB,CAACH,KAAK,CAACW,UAAN,GAAmBV,UAAU,CAACvB,KAAD,CAA9B,EAAuCyB,OAAvC,CAA+C,CAA/C,CAXhB,8CAYa,CAACH,KAAK,CAACY,OAAN,GAAgBX,UAAU,CAACvB,KAAD,CAA3B,EAAoCyB,OAApC,CAA4C,CAA5C,CAZb,gDAae,CAACH,KAAK,CAACa,SAAN,GAAkBZ,UAAU,CAACvB,KAAD,CAA7B,EAAsCyB,OAAtC,CAA8C,CAA9C,CAbf,gDAce,CAACH,KAAK,CAACc,SAAN,GAAkBb,UAAU,CAACvB,KAAD,CAA7B,EAAsCyB,OAAtC,CAA8C,CAA9C,CAdf;AAgBH,WAjBD,MAiBO;AACH,mBAAOH,KAAP;AACH;AACJ,SArBY;AAHV,OAAP;AA0BH,KA3BS,CAAV;AA4BAJ,IAAAA,QAAQ;AACX,GA9BD;;AAgCA,WAASA,QAAT,GAAoB;AAChB;AACAmB,IAAAA,UAAU,CAAC,YAAM;AACbtC,MAAAA,aAAa,CAAC;AACVJ,QAAAA,MAAM,EAAE,KADE;AAEVC,QAAAA,MAAM,EAAE,IAFE;AAGVC,QAAAA,UAAU,EAAE;AAHF,OAAD,CAAb;AAKH,KANS,EAMP,CANO,CAAV,CAFgB,CAShB;;AACAI,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAED,WAASqC,gBAAT,CAA0BzC,UAA1B,EAAsC0C,IAAtC,EAA4CC,KAA5C,EAAmD;AAC/C,WAAOD,IAAI,CAAC1C,UAAD,CAAJ,KAAqBJ,IAAI,CAACH,YAAL,CAAkBkD,KAAlB,EAAyB3C,UAAzB,CAArB,GAA6D0C,IAAI,CAAC1C,UAAD,CAAJ,GAAmBJ,IAAI,CAACH,YAAL,CAAkBkD,KAAlB,EAAyB3C,UAAzB,CAAnB,GAA0D;AAAEd,MAAAA,eAAe,EAAE;AAAnB,KAA1D,GAA2F;AAAEA,MAAAA,eAAe,EAAE;AAAnB,KAAxJ,GAA0L,IAAjM;AACH;;AAED,MAAM0D,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAQC,OAAR,EAAoB;AACzCxC,IAAAA,OAAO,CAACwC,OAAD,CAAP;AACH,GAFD;;AAIA,MAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACF,KAAD,EAAW;AACvCrC,IAAAA,cAAc,CAACwC,QAAQ,CAACH,KAAK,CAACI,MAAN,CAAa9C,KAAd,EAAqB,EAArB,CAAT,CAAd;AACAG,IAAAA,OAAO,CAAC,CAAD,CAAP;AACH,GAHD;;AAKA,WAAS4C,aAAT,GAAyB;AAErB,QAAIC,EAAE,GAAGnF,IAAI,CAACoF,KAAL,CAAWC,QAAX,EAAT;AACAF,IAAAA,EAAE,CAACG,KAAH,GAAW;AACPC,MAAAA,KAAK,EAAE,oBADA;AAEPC,MAAAA,OAAO,EAAE,oBAFF;AAGPC,MAAAA,MAAM,EAAE,QAHD;AAIPC,MAAAA,WAAW,EAAE,IAAIC,IAAJ;AAJN,KAAX;AAMAR,IAAAA,EAAE,CAACS,UAAH,CAAcC,IAAd,CAAmB,oBAAnB;AACA,QAAIC,OAAO,GAAGlE,IAAI,CAACF,WAAnB,CAVqB,CAUY;;AACjC,QAAIqE,EAAE,GAAG/F,IAAI,CAACoF,KAAL,CAAWY,aAAX,CAAyBF,OAAzB,CAAT;AACAX,IAAAA,EAAE,CAACc,MAAH,CAAU,oBAAV,IAAkCF,EAAlC;AACA,QAAIG,KAAK,GAAGlG,IAAI,CAACmG,KAAL,CAAWhB,EAAX,EAAe;AAACiB,MAAAA,QAAQ,EAAC,MAAV;AAAmBC,MAAAA,IAAI,EAAE;AAAzB,KAAf,CAAZ;;AACA,aAASC,IAAT,CAAcC,CAAd,EAAiB;AACb,UAAIC,GAAG,GAAG,IAAIC,WAAJ,CAAgBF,CAAC,CAACG,MAAlB,CAAV,CADa,CACwB;;AACrC,UAAIC,IAAI,GAAG,IAAIC,UAAJ,CAAeJ,GAAf,CAAX,CAFa,CAEoB;;AACjC,WAAK,IAAIK,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACN,CAAC,CAACG,MAAlB,EAA0BG,CAAC,EAA3B;AAA+BF,QAAAA,IAAI,CAACE,CAAD,CAAJ,GAAUN,CAAC,CAACO,UAAF,CAAaD,CAAb,IAAkB,IAA5B;AAA/B,OAHa,CAGoD;;;AACjE,aAAOL,GAAP;AACH,KAnBoB,CAoBrB;;;AACA,QAAMO,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACV,IAAI,CAACJ,KAAD,CAAL,CAAT,EAAwB,yBAAxB,EAAmD;AAACG,MAAAA,IAAI,EAAC;AAAN,KAAnD,CAAb;AACApG,IAAAA,SAAS,CAACgH,MAAV,CAAiBF,IAAjB;AAEH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAE;AAAC7F,MAAAA,eAAe,EAAE,SAAlB;AAA6BC,MAAAA,KAAK,EAAE,OAApC;AAA6C+F,MAAAA,OAAO,EAAE;AAAtD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAC,WAArB;AAAiC,IAAA,IAAI,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMhC,aAAa,EAAnB;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,CADJ,CADJ,CADJ,CADJ,eAWI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKtD,IAAI,CAACD,IAAL,CAAU6B,GAAV,CAAc,UAAA2D,KAAK;AAAA,wBAAI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkBA,KAAlB,CAAJ;AAAA,GAAnB,CAFL,CADJ,CADJ,eAOI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQvF,IAAI,CAACF,WAAL,CAAiB0F,KAAjB,CAAuB/E,IAAI,GAAGE,WAA9B,EAA2CF,IAAI,GAAGE,WAAP,GAAqBA,WAAhE,EACKiB,GADL,CACS,UAACkB,IAAD,EAAOC,KAAP;AAAA,wBACD,oBAAC,cAAD;AAAgB,MAAA,GAAG,EAAED,IAAI,CAACzB,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjB,CADJ,eAEI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkByB,IAAI,CAACzB,GAAvB,CAFJ,eAGI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkByB,IAAI,CAAC2C,IAAvB,CAHJ,eAII,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkB3C,IAAI,CAAC4C,GAAvB,CAJJ,eAKI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkB5C,IAAI,CAACa,KAAvB,CALJ,eAMI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkBb,IAAI,CAAC6C,KAAvB,CANJ,eAOI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkB7C,IAAI,CAAC8C,WAAvB,CAPJ,eAQI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkB9C,IAAI,CAAC+C,UAAvB,CARJ,eASI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkB/C,IAAI,CAACgD,YAAvB,CATJ,eAUI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkBhD,IAAI,CAACiD,WAAvB,CAVJ,eAWI,oBAAC,eAAD;AAAiB,MAAA,OAAO,EAAE;AAAA,eAAM3E,MAAM,CAAC;AAAEC,UAAAA,GAAG,EAAEyB,IAAI,CAACzB,GAAZ;AAAiBjB,UAAAA,UAAU,EAAE;AAA7B,SAAD,CAAZ;AAAA,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQC,UAAU,CAACH,MAAX,IAAqBG,UAAU,CAACF,MAAX,KAAsB2C,IAAI,CAACzB,GAAhD,IAAuDhB,UAAU,CAACD,UAAX,KAA0B,iBAAjF,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEG,KAAlB;AAAyB,MAAA,WAAW,EAAEuC,IAAI,CAACkD,eAA3C;AACI,MAAA,QAAQ,EAAE,kBAAC/C,KAAD;AAAA,eAAWzC,WAAW,CAACyC,KAAK,CAACI,MAAN,CAAa9C,KAAd,CAAtB;AAAA,OADd;AAEM,MAAA,UAAU,EAAE,oBAAC0C,KAAD;AAAA,eAAWgD,QAAQ,EAAnB;AAAA,OAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAKI;AACI,MAAA,OAAO,EAAE;AAAA,eAAMvE,MAAM,CAAC;AAAEL,UAAAA,GAAG,EAAEyB,IAAI,CAACzB,GAAZ;AAAiBjB,UAAAA,UAAU,EAAE;AAA7B,SAAD,CAAZ;AAAA,OADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAWI;AACI,MAAA,KAAK,EAAE;AAAE8F,QAAAA,UAAU,EAAE;AAAd,OADX;AAEI,MAAA,OAAO,EAAE;AAAA,eAAMzE,QAAQ,EAAd;AAAA,OAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,CADJ,GAoBQqB,IAAI,CAACkD,eAtBrB,CAXJ,eAqCI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkBlD,IAAI,CAACqD,WAAvB,CArCJ,eAsCI,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAEtD,gBAAgB,CAAC,kBAAD,EAAqBC,IAArB,EAA2BC,KAA3B,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4ED,IAAI,CAACf,gBAAjF,CAtCJ,eAuCI,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAEc,gBAAgB,CAAC,QAAD,EAAWC,IAAX,EAAiBC,KAAjB,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkED,IAAI,CAACb,MAAvE,CAvCJ,eAwCI,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAEY,gBAAgB,CAAC,QAAD,EAAWC,IAAX,EAAiBC,KAAjB,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkED,IAAI,CAACZ,MAAvE,CAxCJ,eAyCI,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAEW,gBAAgB,CAAC,KAAD,EAAQC,IAAR,EAAcC,KAAd,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+DD,IAAI,CAACX,GAApE,CAzCJ,eA0CI,oBAAC,eAAD;AAAiB,MAAA,OAAO,EAAE;AAAA,eAAMf,MAAM,CAAC;AAAEC,UAAAA,GAAG,EAAEyB,IAAI,CAACzB,GAAZ;AAAiBjB,UAAAA,UAAU,EAAE;AAA7B,SAAD,CAAZ;AAAA,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQC,UAAU,CAACH,MAAX,IAAqBG,UAAU,CAACF,MAAX,KAAsB2C,IAAI,CAACzB,GAAhD,IAAuDhB,UAAU,CAACD,UAAX,KAA0B,iBAAjF,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,KAAK,EAAEG,KAAd;AAAqB,MAAA,WAAW,EAAEuC,IAAI,CAACsD,eAAvC;AACI,MAAA,QAAQ,EAAE,kBAACnD,KAAD;AAAA,eAAWzC,WAAW,CAACyC,KAAK,CAACI,MAAN,CAAa9C,KAAd,CAAtB;AAAA,OADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAII;AACI,MAAA,OAAO,EAAE;AAAA,eAAMmB,MAAM,CAAC;AAAEL,UAAAA,GAAG,EAAEyB,IAAI,CAACzB,GAAZ;AAAiBjB,UAAAA,UAAU,EAAE;AAA7B,SAAD,CAAZ;AAAA,OADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAUI;AACI,MAAA,KAAK,EAAE;AAAE8F,QAAAA,UAAU,EAAE;AAAd,OADX;AAEI,MAAA,OAAO,EAAE;AAAA,eAAMzE,QAAQ,EAAd;AAAA,OAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,CADJ,GAmBQqB,IAAI,CAACsD,eArBrB,CA1CJ,eAmEI,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAEvD,gBAAgB,CAAC,kBAAD,EAAqBC,IAArB,EAA2BC,KAA3B,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4ED,IAAI,CAACV,gBAAjF,CAnEJ,eAoEI,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAES,gBAAgB,CAAC,WAAD,EAAcC,IAAd,EAAoBC,KAApB,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqED,IAAI,CAACT,SAA1E,CApEJ,eAqEI,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAEQ,gBAAgB,CAAC,kBAAD,EAAqBC,IAArB,EAA2BC,KAA3B,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4ED,IAAI,CAACR,gBAAjF,CArEJ,eAsEI,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAEO,gBAAgB,CAAC,YAAD,EAAeC,IAAf,EAAqBC,KAArB,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsED,IAAI,CAACP,UAA3E,CAtEJ,eAuEI,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAEM,gBAAgB,CAAC,YAAD,EAAeC,IAAf,EAAqBC,KAArB,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsED,IAAI,CAACN,UAA3E,CAvEJ,eAwEI,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAEK,gBAAgB,CAAC,SAAD,EAAYC,IAAZ,EAAkBC,KAAlB,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmED,IAAI,CAACL,OAAxE,CAxEJ,eAyEI,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAEI,gBAAgB,CAAC,WAAD,EAAcC,IAAd,EAAoBC,KAApB,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqED,IAAI,CAACJ,SAA1E,CAzEJ,eA0EI,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAEG,gBAAgB,CAAC,WAAD,EAAcC,IAAd,EAAoBC,KAApB,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqED,IAAI,CAACH,SAA1E,CA1EJ,eA2EI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkBG,IAAI,CAACuD,aAAvB,CA3EJ,eA4EI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkBvD,IAAI,CAACwD,OAAvB,CA5EJ,eA6EI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkBxD,IAAI,CAACyD,GAAvB,CA7EJ,eA8EI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkBzD,IAAI,CAAC0D,QAAvB,CA9EJ,eA+EI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkB1D,IAAI,CAAC2D,MAAvB,CA/EJ,CADC;AAAA,GADT,CAFR,CAPJ,CAXJ,CAFJ,eA8GI,oBAAC,eAAD;AACI,IAAA,kBAAkB,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CADxB;AAEI,IAAA,SAAS,EAAC,KAFd;AAGI,IAAA,KAAK,EAAEzG,IAAI,CAACF,WAAL,CAAiBgF,MAH5B;AAII,IAAA,WAAW,EAAEnE,WAJjB;AAKI,IAAA,IAAI,EAAEF,IALV;AAMI,IAAA,YAAY,EAAEuC,gBANlB;AAOI,IAAA,mBAAmB,EAAEG,uBAPzB;AAQI,IAAA,KAAK,EAAE;AAAC7D,MAAAA,eAAe,EAAE,SAAlB;AAA6BoH,MAAAA,YAAY,EAAE,KAA3C;AAAkDnH,MAAAA,KAAK,EAAE;AAAzD,KARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9GJ,CADJ;AA2HH","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport XLSX from 'xlsx';\nimport FileSaver from \"file-saver\";\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport TextField from '@material-ui/core/TextField';\n\nconst StyledTableCell = withStyles(() => ({\n    head: {\n        backgroundColor: '#3f51b5',\n        color: 'white',\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(() => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: '#f5f5f5',\n        },\n    },\n}))(TableRow);\n\nexport default function TableFromScratch() {\n\n    const [data, updateData] = useState({\n        originalData: [],\n        currentData: [],\n        keys: []\n    });\n\n    const [inEditMode, setInEditMode] = useState({\n        status: false,\n        rowKey: null,\n        columnName: \"\",\n    });\n\n    const [value, changeValue] = useState(null);\n\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n\n    const fetchInventory = () => {\n        axios.get('http://localhost:5000/test/')\n            .then(res => updateData({\n                originalData: res.data[0],\n                currentData: res.data[0],\n                keys: res.data[1]\n            }))\n            .catch(err => console.log(err));\n\n    }\n\n    useEffect(() => {\n        fetchInventory();\n    }, []);\n\n    // /**\n    //  *\n    //  * @param id - The id of the product\n    //  * @param currentUnitPrice - The current unit price of the product\n    //  */\n    const onEdit = ({ UPC, columnName }) => {\n        setInEditMode({\n            status: true,\n            rowKey: UPC,\n            columnName: columnName\n        })\n        // setUnitPrice(currentUnitPrice);\n    }\n\n    // /**\n    //  *\n    //  * @param id\n    //  * @param newUnitPrice\n    //  */\n    const updateInventory = ({ UPC, newUnitPrice }) => {\n        axios.post('http://localhost:5000/test/', { UPC, newUnitPrice })\n            .then(() => {\n                onCancel();\n                fetchInventory();\n            })\n            .catch(err => console.log(err));\n    }\n\n    // /**\n    //  *\n    //  * @param id -The id of the product\n    //  * @param newUnitPrice - The new unit price of the product\n    //  */\n    const onSave = ({ UPC, columnName }) => {\n        updateData(prevValue => {\n            return {\n                originalData: prevValue.originalData,\n                keys: prevValue.keys,\n                currentData: prevValue.currentData.map(datum => {\n                    if (datum.UPC === UPC) {\n                        return {\n                            ...datum,\n                            [columnName]: parseFloat(value),\n                            TotalProductCost: (datum.TotalProductCost * parseFloat(value)).toFixed(2),\n                            Profit: (datum.Profit * parseFloat(value)).toFixed(2),\n                            Margin: (datum.Margin * parseFloat(value)).toFixed(2),\n                            ROI: (datum.ROI * parseFloat(value)).toFixed(2),\n                            New_Price_Factor: (datum.New_Price_Factor * parseFloat(value)).toFixed(2),\n                            New_Price: (datum.New_Price * parseFloat(value)).toFixed(2),\n                            New_Referral_Fee: (datum.New_Referral_Fee * parseFloat(value)).toFixed(2),\n                            New_Profit: (datum.New_Profit * parseFloat(value)).toFixed(2),\n                            New_Margin: (datum.New_Margin * parseFloat(value)).toFixed(2),\n                            New_ROI: (datum.New_ROI * parseFloat(value)).toFixed(2),\n                            Min_Price: (datum.Min_Price * parseFloat(value)).toFixed(2),\n                            Max_Price: (datum.Max_Price * parseFloat(value)).toFixed(2)\n                        }\n                    } else {\n                        return datum\n                    }\n                })\n            }\n        });\n        onCancel();\n    }\n\n    function onCancel() {\n        // reset the inEditMode state value\n        setTimeout(() => {\n            setInEditMode({\n                status: false,\n                rowKey: null,\n                columnName: \"\"\n            })\n        }, 1)\n        // reset the unit price state value\n        changeValue(null);\n    }\n\n    function conditionalStyle(columnName, item, index) {\n        return item[columnName] !== data.originalData[index][columnName] ? (item[columnName] > data.originalData[index][columnName] ? { backgroundColor: '#55ae59' } : { backgroundColor: '#ea4845' }) : null\n    }\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    function exportToExcel() {\n\n        var wb = XLSX.utils.book_new();\n        wb.Props = {\n            Title: \"Ecommerce PML Data\",\n            Subject: \"Ecommerce PML Data\",\n            Author: \"Qualex\",\n            CreatedDate: new Date()\n        };\n        wb.SheetNames.push(\"Ecommerce PML Data\");\n        var ws_data = data.currentData;  //a row with 2 columns\n        var ws = XLSX.utils.json_to_sheet(ws_data);\n        wb.Sheets[\"Ecommerce PML Data\"] = ws;\n        var wbout = XLSX.write(wb, {bookType:'xlsx',  type: 'binary'});\n        function s2ab(s) { \n            var buf = new ArrayBuffer(s.length); //convert s to arrayBuffer\n            var view = new Uint8Array(buf);  //create uint8array as viewer\n            for (var i=0; i<s.length; i++) view[i] = s.charCodeAt(i) & 0xFF; //convert to octet\n            return buf;    \n        }\n        // const file = new Blob(([s2ab(wbout)],{type:\"application/octet-stream\"}), 'test.xlsx');\n        const file = new File([s2ab(wbout)], \"ecommerce-pml-data.xlsx\", {type:\"application/octet-stream\"});\n        FileSaver.saveAs(file);\n\n    }\n\n    return (\n        <div className=\"container\">\n            <h1>Product Master List</h1>\n            <TableContainer>\n                <div style={{backgroundColor: \"#3f51b5\", color: \"white\", padding: \"5px\"}}>\n                    <Grid container spacing={3}>\n                        <Grid item>\n                            <ButtonGroup variant=\"contained\" size=\"small\">\n                                <Button onClick={() => exportToExcel()}>Export to Excel</Button>\n                                <Button>Add to Repricing</Button>\n                            </ButtonGroup>\n                        </Grid>\n                    </Grid>\n                </div>\n                <Table>\n                    <TableHead>\n                        <StyledTableRow>\n                            <StyledTableCell></StyledTableCell>\n                            {data.keys.map(title => <StyledTableCell>{title}</StyledTableCell>)}\n                        </StyledTableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            data.currentData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((item, index) => (\n                                    <StyledTableRow key={item.UPC}>\n                                        <StyledTableCell><Checkbox /></StyledTableCell>\n                                        <StyledTableCell>{item.UPC}</StyledTableCell>\n                                        <StyledTableCell>{item.ASIN}</StyledTableCell>\n                                        <StyledTableCell>{item.SKU}</StyledTableCell>\n                                        <StyledTableCell>{item.Title}</StyledTableCell>\n                                        <StyledTableCell>{item.Brand}</StyledTableCell>\n                                        <StyledTableCell>{item.ProductCost}</StyledTableCell>\n                                        <StyledTableCell>{item.unitWeight}</StyledTableCell>\n                                        <StyledTableCell>{item.ShippingCost}</StyledTableCell>\n                                        <StyledTableCell>{item.ReferralFee}</StyledTableCell>\n                                        <StyledTableCell onClick={() => onEdit({ UPC: item.UPC, columnName: \"PackagingFactor\" })}>\n                                            {\n                                                inEditMode.status && inEditMode.rowKey === item.UPC && inEditMode.columnName === \"PackagingFactor\" ? (\n                                                    <div>\n                                                        <TextField value={value} placeholder={item.PackagingFactor}\n                                                            onChange={(event) => changeValue(event.target.value)}\n                                                              onKeyPress={(event) => keyPress()}\n                                                            />\n                                                        <button\n                                                            onClick={() => onSave({ UPC: item.UPC, columnName: \"PackagingFactor\" })}\n                                                        >\n                                                            Save\n                                                </button>\n\n                                                        <button\n                                                            style={{ marginLeft: 8 }}\n                                                            onClick={() => onCancel()}\n                                                        >\n                                                            Cancel\n                                                </button>\n                                                    </div>\n                                                ) : (\n                                                        item.PackagingFactor\n                                                    )\n                                            }\n                                        </StyledTableCell>\n                                        <StyledTableCell>{item.BuyBoxPrice}</StyledTableCell>\n                                        <StyledTableCell style={conditionalStyle(\"TotalProductCost\", item, index)}>{item.TotalProductCost}</StyledTableCell>\n                                        <StyledTableCell style={conditionalStyle(\"Profit\", item, index)}>{item.Profit}</StyledTableCell>\n                                        <StyledTableCell style={conditionalStyle(\"Margin\", item, index)}>{item.Margin}</StyledTableCell>\n                                        <StyledTableCell style={conditionalStyle(\"ROI\", item, index)}>{item.ROI}</StyledTableCell>\n                                        <StyledTableCell onClick={() => onEdit({ UPC: item.UPC, columnName: \"Variable_Margin\" })}>\n                                            {\n                                                inEditMode.status && inEditMode.rowKey === item.UPC && inEditMode.columnName === \"Variable_Margin\" ? (\n                                                    <div>\n                                                        <input value={value} placeholder={item.Variable_Margin}\n                                                            onChange={(event) => changeValue(event.target.value)}\n                                                        />\n                                                        <button\n                                                            onClick={() => onSave({ UPC: item.UPC, columnName: \"Variable_Margin\" })}\n                                                        >\n                                                            Save\n                                                </button>\n\n                                                        <button\n                                                            style={{ marginLeft: 8 }}\n                                                            onClick={() => onCancel()}\n                                                        >\n                                                            Cancel\n                                                </button>\n                                                    </div>\n                                                ) : (\n                                                        item.Variable_Margin\n                                                    )\n                                            }\n                                        </StyledTableCell>\n                                        <StyledTableCell style={conditionalStyle(\"New_Price_Factor\", item, index)}>{item.New_Price_Factor}</StyledTableCell>\n                                        <StyledTableCell style={conditionalStyle(\"New_Price\", item, index)}>{item.New_Price}</StyledTableCell>\n                                        <StyledTableCell style={conditionalStyle(\"New_Referral_Fee\", item, index)}>{item.New_Referral_Fee}</StyledTableCell>\n                                        <StyledTableCell style={conditionalStyle(\"New_Profit\", item, index)}>{item.New_Profit}</StyledTableCell>\n                                        <StyledTableCell style={conditionalStyle(\"New_Margin\", item, index)}>{item.New_Margin}</StyledTableCell>\n                                        <StyledTableCell style={conditionalStyle(\"New_ROI\", item, index)}>{item.New_ROI}</StyledTableCell>\n                                        <StyledTableCell style={conditionalStyle(\"Min_Price\", item, index)}>{item.Min_Price}</StyledTableCell>\n                                        <StyledTableCell style={conditionalStyle(\"Max_Price\", item, index)}>{item.Max_Price}</StyledTableCell>\n                                        <StyledTableCell>{item.Match_Buy_Box}</StyledTableCell>\n                                        <StyledTableCell>{item.Channel}</StyledTableCell>\n                                        <StyledTableCell>{item.BSR}</StyledTableCell>\n                                        <StyledTableCell>{item.Quantity}</StyledTableCell>\n                                        <StyledTableCell>{item.Rating}</StyledTableCell>\n                                    </StyledTableRow>\n                                ))\n                        }\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                component=\"div\"\n                count={data.currentData.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                style={{backgroundColor: \"#3f51b5\", borderRadius: \"2px\", color: \"white\"}}\n            />\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}