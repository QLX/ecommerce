{"ast":null,"code":"import _defineProperty from \"/Users/reedmurphy/Desktop/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/reedmurphy/Desktop/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/reedmurphy/Desktop/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/reedmurphy/Desktop/material-dashboard-react-master/src/views/PML/PML.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport XLSX from 'xlsx';\nimport FileSaver from \"file-saver\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport TextField from '@material-ui/core/TextField';\nvar StyledTableCell = withStyles(function () {\n  return {\n    head: {\n      backgroundColor: '#3f51b5',\n      color: 'white',\n      fontSize: 16,\n      paddingTop: 20\n    },\n    body: {\n      fontSize: 14\n    }\n  };\n})(TableCell);\nvar EditibleTableCell = withStyles(function () {\n  return {\n    head: {\n      backgroundColor: 'orange',\n      color: 'white',\n      fontSize: 16,\n      paddingTop: 20\n    }\n  };\n})(TableCell);\nvar StyledTableRow = withStyles(function () {\n  return {\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: '#f5f5f5'\n      }\n    }\n  };\n})(TableRow);\nvar useStyles = makeStyles({\n  buttonGroup: {\n    background: \"linear-gradient(45deg, #ea4845, #fea320 70%)\",\n    padding: \"5px\"\n  }\n});\nexport default function TableFromScratch() {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _useState = useState({\n    originalData: [],\n    currentData: [],\n    keys: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      updateData = _useState2[1];\n\n  var _useState3 = useState({\n    status: false,\n    rowKey: null,\n    columnName: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inEditMode = _useState4[0],\n      setInEditMode = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      value = _useState6[0],\n      changeValue = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      page = _useState8[0],\n      setPage = _useState8[1];\n\n  var _useState9 = useState(5),\n      _useState10 = _slicedToArray(_useState9, 2),\n      rowsPerPage = _useState10[0],\n      setRowsPerPage = _useState10[1];\n\n  var fetchInventory = function fetchInventory() {\n    axios.get('http://localhost:5000/test/').then(function (res) {\n      return updateData({\n        originalData: res.data[0],\n        currentData: res.data[0],\n        keys: res.data[1]\n      });\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  };\n\n  useEffect(function () {\n    fetchInventory();\n  }, []); // /**\n  //  *\n  //  * @param id - The id of the product\n  //  * @param currentUnitPrice - The current unit price of the product\n  //  */\n\n  var onEdit = function onEdit(_ref) {\n    var UPC = _ref.UPC,\n        columnName = _ref.columnName;\n    setInEditMode({\n      status: true,\n      rowKey: UPC,\n      columnName: columnName\n    }); // setUnitPrice(currentUnitPrice);\n  }; // /**\n  //  *\n  //  * @param id\n  //  * @param newUnitPrice\n  //  */\n\n\n  var updateInventory = function updateInventory(_ref2) {\n    var UPC = _ref2.UPC,\n        newUnitPrice = _ref2.newUnitPrice;\n    axios.post('http://localhost:5000/test/', {\n      UPC: UPC,\n      newUnitPrice: newUnitPrice\n    }).then(function () {\n      onCancel();\n      fetchInventory();\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  }; // /**\n  //  *\n  //  * @param id -The id of the product\n  //  * @param newUnitPrice - The new unit price of the product\n  //  */\n\n\n  var onSave = function onSave(_ref3) {\n    var UPC = _ref3.UPC,\n        columnName = _ref3.columnName;\n\n    if (value !== null) {\n      updateData(function (prevValue) {\n        return {\n          originalData: prevValue.originalData,\n          keys: prevValue.keys,\n          currentData: prevValue.currentData.map(function (datum) {\n            if (datum.UPC === UPC) {\n              var _objectSpread2;\n\n              return _objectSpread(_objectSpread({}, datum), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, columnName, parseFloat(value)), _defineProperty(_objectSpread2, \"TotalProductCost\", (datum.TotalProductCost * parseFloat(value)).toFixed(2)), _defineProperty(_objectSpread2, \"Profit\", (datum.Profit * parseFloat(value)).toFixed(2)), _defineProperty(_objectSpread2, \"Margin\", (datum.Margin * parseFloat(value)).toFixed(2)), _defineProperty(_objectSpread2, \"ROI\", (datum.ROI * parseFloat(value)).toFixed(2)), _defineProperty(_objectSpread2, \"New_Price_Factor\", (datum.New_Price_Factor * parseFloat(value)).toFixed(2)), _defineProperty(_objectSpread2, \"New_Price\", (datum.New_Price * parseFloat(value)).toFixed(2)), _defineProperty(_objectSpread2, \"New_Referral_Fee\", (datum.New_Referral_Fee * parseFloat(value)).toFixed(2)), _defineProperty(_objectSpread2, \"New_Profit\", (datum.New_Profit * parseFloat(value)).toFixed(2)), _defineProperty(_objectSpread2, \"New_Margin\", (datum.New_Margin * parseFloat(value)).toFixed(2)), _defineProperty(_objectSpread2, \"New_ROI\", (datum.New_ROI * parseFloat(value)).toFixed(2)), _defineProperty(_objectSpread2, \"Min_Price\", (datum.Min_Price * parseFloat(value)).toFixed(2)), _defineProperty(_objectSpread2, \"Max_Price\", (datum.Max_Price * parseFloat(value)).toFixed(2)), _objectSpread2));\n            } else {\n              return datum;\n            }\n          })\n        };\n      });\n    }\n\n    onCancel();\n  };\n\n  function keyPress(event, _ref4) {\n    var UPC = _ref4.UPC,\n        columnName = _ref4.columnName;\n\n    if (event.key === \"Enter\") {\n      onSave({\n        UPC: UPC,\n        columnName: columnName\n      });\n      onCancel();\n    }\n  }\n\n  function onCancel() {\n    // reset the inEditMode state value\n    setInEditMode({\n      status: false,\n      rowKey: null,\n      columnName: \"\"\n    }); // reset the unit price state value\n\n    changeValue(null);\n  }\n\n  function conditionalStyle(columnName, item, index) {\n    return item[columnName] !== data.originalData[index][columnName] ? item[columnName] > data.originalData[index][columnName] ? {\n      backgroundColor: '#55ae59'\n    } : {\n      backgroundColor: '#ea4845'\n    } : null;\n  }\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  function exportToExcel() {\n    var wb = XLSX.utils.book_new();\n    wb.Props = {\n      Title: \"Ecommerce PML Data\",\n      Subject: \"Ecommerce PML Data\",\n      Author: \"Qualex\",\n      CreatedDate: new Date()\n    };\n    wb.SheetNames.push(\"Ecommerce PML Data\");\n    var ws_data = data.currentData; //a row with 2 columns\n\n    var ws = XLSX.utils.json_to_sheet(ws_data);\n    wb.Sheets[\"Ecommerce PML Data\"] = ws;\n    var wbout = XLSX.write(wb, {\n      bookType: 'xlsx',\n      type: 'binary'\n    });\n\n    function s2ab(s) {\n      var buf = new ArrayBuffer(s.length); //convert s to arrayBuffer\n\n      var view = new Uint8Array(buf); //create uint8array as viewer\n\n      for (var i = 0; i < s.length; i++) {\n        view[i] = s.charCodeAt(i) & 0xFF;\n      } //convert to octet\n\n\n      return buf;\n    } // const file = new Blob(([s2ab(wbout)],{type:\"application/octet-stream\"}), 'test.xlsx');\n\n\n    var file = new File([s2ab(wbout)], \"ecommerce-pml-data.xlsx\", {\n      type: \"application/octet-stream\"\n    });\n    FileSaver.saveAs(file);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }, \"Product Master List\"), /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    className: classes.buttonGroup,\n    size: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return exportToExcel();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, \"Export to Excel\"), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }, \"Add to Repricing\"))))), /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 15\n    }\n  }), data.keys.map(function (title) {\n    return title === \"PackagingFactor\" || title === \"Variable_Margin\" ? /*#__PURE__*/React.createElement(EditibleTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }\n    }, title) : /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 66\n      }\n    }, title);\n  }))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }\n  }, data.currentData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (item, index) {\n    return /*#__PURE__*/React.createElement(StyledTableRow, {\n      key: item.UPC,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 38\n      }\n    })), /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 21\n      }\n    }, item.UPC), /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }\n    }, item.ASIN), /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 21\n      }\n    }, item.SKU), /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 21\n      }\n    }, item.Title), /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 21\n      }\n    }, item.Brand), /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }\n    }, item.ProductCost), /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }\n    }, item.unitWeight), /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }\n    }, item.ShippingCost), /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }\n    }, item.ReferralFee), /*#__PURE__*/React.createElement(StyledTableCell, {\n      onClick: function onClick() {\n        return onEdit({\n          UPC: item.UPC,\n          columnName: \"PackagingFactor\"\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 21\n      }\n    }, inEditMode.status && inEditMode.rowKey === item.UPC && inEditMode.columnName === \"PackagingFactor\" ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      value: value,\n      placeholder: item.PackagingFactor,\n      onChange: function onChange(event) {\n        return changeValue(event.target.value);\n      },\n      onKeyPress: function onKeyPress(event) {\n        return keyPress(event, {\n          UPC: item.UPC,\n          columnName: \"PackagingFactor\"\n        });\n      },\n      autoFocus: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 29\n      }\n    })) : item.PackagingFactor), /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 21\n      }\n    }, item.BuyBoxPrice), /*#__PURE__*/React.createElement(StyledTableCell, {\n      style: conditionalStyle(\"TotalProductCost\", item, index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }\n    }, item.TotalProductCost), /*#__PURE__*/React.createElement(StyledTableCell, {\n      style: conditionalStyle(\"Profit\", item, index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 21\n      }\n    }, item.Profit), /*#__PURE__*/React.createElement(StyledTableCell, {\n      style: conditionalStyle(\"Margin\", item, index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }\n    }, item.Margin), /*#__PURE__*/React.createElement(StyledTableCell, {\n      style: conditionalStyle(\"ROI\", item, index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }\n    }, item.ROI), /*#__PURE__*/React.createElement(StyledTableCell, {\n      onClick: function onClick() {\n        return onEdit({\n          UPC: item.UPC,\n          columnName: \"Variable_Margin\"\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }\n    }, inEditMode.status && inEditMode.rowKey === item.UPC && inEditMode.columnName === \"Variable_Margin\" ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      value: value,\n      placeholder: item.Variable_Margin,\n      onChange: function onChange(event) {\n        return changeValue(event.target.value);\n      },\n      onKeyPress: function onKeyPress(event) {\n        return keyPress(event, {\n          UPC: item.UPC,\n          columnName: \"Variable_Margin\"\n        });\n      },\n      autoFocus: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 29\n      }\n    })) : item.Variable_Margin), /*#__PURE__*/React.createElement(StyledTableCell, {\n      style: conditionalStyle(\"New_Price_Factor\", item, index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 21\n      }\n    }, item.New_Price_Factor), /*#__PURE__*/React.createElement(StyledTableCell, {\n      style: conditionalStyle(\"New_Price\", item, index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 21\n      }\n    }, item.New_Price), /*#__PURE__*/React.createElement(StyledTableCell, {\n      style: conditionalStyle(\"New_Referral_Fee\", item, index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 21\n      }\n    }, item.New_Referral_Fee), /*#__PURE__*/React.createElement(StyledTableCell, {\n      style: conditionalStyle(\"New_Profit\", item, index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 21\n      }\n    }, item.New_Profit), /*#__PURE__*/React.createElement(StyledTableCell, {\n      style: conditionalStyle(\"New_Margin\", item, index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 21\n      }\n    }, item.New_Margin), /*#__PURE__*/React.createElement(StyledTableCell, {\n      style: conditionalStyle(\"New_ROI\", item, index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 21\n      }\n    }, item.New_ROI), /*#__PURE__*/React.createElement(StyledTableCell, {\n      style: conditionalStyle(\"Min_Price\", item, index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 21\n      }\n    }, item.Min_Price), /*#__PURE__*/React.createElement(StyledTableCell, {\n      style: conditionalStyle(\"Max_Price\", item, index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 21\n      }\n    }, item.Max_Price), /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 21\n      }\n    }, item.Match_Buy_Box), /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 21\n      }\n    }, item.Channel), /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 21\n      }\n    }, item.BSR), /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 21\n      }\n    }, item.Quantity), /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 21\n      }\n    }, item.Rating));\n  })))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: data.currentData.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    style: {\n      backgroundColor: \"#3f51b5\",\n      borderRadius: \"0px 0px 10px 10px\",\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/reedmurphy/Desktop/material-dashboard-react-master/src/views/PML/PML.js"],"names":["React","useState","useEffect","axios","XLSX","FileSaver","Checkbox","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TablePagination","Grid","Typography","Button","ButtonGroup","TextField","StyledTableCell","head","backgroundColor","color","fontSize","paddingTop","body","EditibleTableCell","StyledTableRow","root","useStyles","buttonGroup","background","padding","TableFromScratch","classes","originalData","currentData","keys","data","updateData","status","rowKey","columnName","inEditMode","setInEditMode","value","changeValue","page","setPage","rowsPerPage","setRowsPerPage","fetchInventory","get","then","res","err","console","log","onEdit","UPC","updateInventory","newUnitPrice","post","onCancel","onSave","prevValue","map","datum","parseFloat","TotalProductCost","toFixed","Profit","Margin","ROI","New_Price_Factor","New_Price","New_Referral_Fee","New_Profit","New_Margin","New_ROI","Min_Price","Max_Price","keyPress","event","key","conditionalStyle","item","index","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","exportToExcel","wb","utils","book_new","Props","Title","Subject","Author","CreatedDate","Date","SheetNames","push","ws_data","ws","json_to_sheet","Sheets","wbout","write","bookType","type","s2ab","s","buf","ArrayBuffer","length","view","Uint8Array","i","charCodeAt","file","File","saveAs","title","slice","ASIN","SKU","Brand","ProductCost","unitWeight","ShippingCost","ReferralFee","PackagingFactor","BuyBoxPrice","Variable_Margin","Match_Buy_Box","Channel","BSR","Quantity","Rating","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport XLSX from 'xlsx';\nimport FileSaver from \"file-saver\";\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport TextField from '@material-ui/core/TextField';\n\nconst StyledTableCell = withStyles(() => ({\n  head: {\n    backgroundColor: '#3f51b5',\n    color: 'white',\n    fontSize: 16,\n    paddingTop: 20\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst EditibleTableCell = withStyles(() => ({\n  head: {\n    backgroundColor: 'orange',\n    color: 'white',\n    fontSize: 16,\n    paddingTop: 20\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(() => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: '#f5f5f5',\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  buttonGroup: {\n    background: \"linear-gradient(45deg, #ea4845, #fea320 70%)\",\n    padding: \"5px\",\n  }\n});\n\nexport default function TableFromScratch() {\n  const classes = useStyles();\n\n  const [data, updateData] = useState({\n    originalData: [],\n    currentData: [],\n    keys: []\n  });\n\n  const [inEditMode, setInEditMode] = useState({\n    status: false,\n    rowKey: null,\n    columnName: \"\",\n  });\n\n  const [value, changeValue] = useState(null);\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const fetchInventory = () => {\n    axios.get('http://localhost:5000/test/')\n      .then(res => updateData({\n        originalData: res.data[0],\n        currentData: res.data[0],\n        keys: res.data[1]\n      }))\n      .catch(err => console.log(err));\n\n  }\n\n  useEffect(() => {\n    fetchInventory();\n  }, []);\n\n  // /**\n  //  *\n  //  * @param id - The id of the product\n  //  * @param currentUnitPrice - The current unit price of the product\n  //  */\n  const onEdit = ({ UPC, columnName }) => {\n    setInEditMode({\n      status: true,\n      rowKey: UPC,\n      columnName: columnName\n    })\n    // setUnitPrice(currentUnitPrice);\n  }\n\n  // /**\n  //  *\n  //  * @param id\n  //  * @param newUnitPrice\n  //  */\n  const updateInventory = ({ UPC, newUnitPrice }) => {\n    axios.post('http://localhost:5000/test/', { UPC, newUnitPrice })\n      .then(() => {\n        onCancel();\n        fetchInventory();\n      })\n      .catch(err => console.log(err));\n  }\n\n  // /**\n  //  *\n  //  * @param id -The id of the product\n  //  * @param newUnitPrice - The new unit price of the product\n  //  */\n  const onSave = ({ UPC, columnName }) => {\n    if (value !== null) {\n      updateData(prevValue => {\n        return {\n          originalData: prevValue.originalData,\n          keys: prevValue.keys,\n          currentData: prevValue.currentData.map(datum => {\n            if (datum.UPC === UPC) {\n              return {\n                ...datum,\n                [columnName]: parseFloat(value),\n                TotalProductCost: (datum.TotalProductCost * parseFloat(value)).toFixed(2),\n                Profit: (datum.Profit * parseFloat(value)).toFixed(2),\n                Margin: (datum.Margin * parseFloat(value)).toFixed(2),\n                ROI: (datum.ROI * parseFloat(value)).toFixed(2),\n                New_Price_Factor: (datum.New_Price_Factor * parseFloat(value)).toFixed(2),\n                New_Price: (datum.New_Price * parseFloat(value)).toFixed(2),\n                New_Referral_Fee: (datum.New_Referral_Fee * parseFloat(value)).toFixed(2),\n                New_Profit: (datum.New_Profit * parseFloat(value)).toFixed(2),\n                New_Margin: (datum.New_Margin * parseFloat(value)).toFixed(2),\n                New_ROI: (datum.New_ROI * parseFloat(value)).toFixed(2),\n                Min_Price: (datum.Min_Price * parseFloat(value)).toFixed(2),\n                Max_Price: (datum.Max_Price * parseFloat(value)).toFixed(2)\n              }\n            } else {\n              return datum\n            }\n          })\n        }\n      });\n    }\n    onCancel();\n  }\n\n  function keyPress(event, { UPC, columnName }) {\n    if (event.key === \"Enter\") {\n      onSave({ UPC, columnName });\n      onCancel();\n    }\n  }\n\n  function onCancel() {\n    // reset the inEditMode state value\n    setInEditMode({\n      status: false,\n      rowKey: null,\n      columnName: \"\"\n    })\n    // reset the unit price state value\n    changeValue(null);\n  }\n\n  function conditionalStyle(columnName, item, index) {\n    return item[columnName] !== data.originalData[index][columnName] ? (item[columnName] > data.originalData[index][columnName] ? { backgroundColor: '#55ae59' } : { backgroundColor: '#ea4845' }) : null\n  }\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  function exportToExcel() {\n\n    var wb = XLSX.utils.book_new();\n    wb.Props = {\n      Title: \"Ecommerce PML Data\",\n      Subject: \"Ecommerce PML Data\",\n      Author: \"Qualex\",\n      CreatedDate: new Date()\n    };\n    wb.SheetNames.push(\"Ecommerce PML Data\");\n    var ws_data = data.currentData;  //a row with 2 columns\n    var ws = XLSX.utils.json_to_sheet(ws_data);\n    wb.Sheets[\"Ecommerce PML Data\"] = ws;\n    var wbout = XLSX.write(wb, { bookType: 'xlsx', type: 'binary' });\n    function s2ab(s) {\n      var buf = new ArrayBuffer(s.length); //convert s to arrayBuffer\n      var view = new Uint8Array(buf);  //create uint8array as viewer\n      for (var i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xFF; //convert to octet\n      return buf;\n    }\n    // const file = new Blob(([s2ab(wbout)],{type:\"application/octet-stream\"}), 'test.xlsx');\n    const file = new File([s2ab(wbout)], \"ecommerce-pml-data.xlsx\", { type: \"application/octet-stream\" });\n    FileSaver.saveAs(file);\n\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Product Master List</h1>\n      <TableContainer>\n        <div>\n          <Grid container spacing={3}>\n            <Grid item>\n              \n            </Grid>\n            <Grid item>\n              <ButtonGroup className={classes.buttonGroup} size=\"medium\">\n                <Button onClick={() => exportToExcel()}>Export to Excel</Button>\n                <Button>Add to Repricing</Button>\n              </ButtonGroup>\n            </Grid>\n          </Grid>\n        </div>\n        <Table>\n          <TableHead >\n            <StyledTableRow >\n              <StyledTableCell></StyledTableCell>\n              {data.keys.map(title => title === \"PackagingFactor\" || title === \"Variable_Margin\" ?\n                <EditibleTableCell>{title}</EditibleTableCell> : <StyledTableCell>{title}</StyledTableCell>)}\n            </StyledTableRow>\n          </TableHead>\n          <TableBody>\n            {\n              data.currentData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((item, index) => (\n                  <StyledTableRow key={item.UPC}>\n                    <StyledTableCell><Checkbox /></StyledTableCell>\n                    <StyledTableCell>{item.UPC}</StyledTableCell>\n                    <StyledTableCell>{item.ASIN}</StyledTableCell>\n                    <StyledTableCell>{item.SKU}</StyledTableCell>\n                    <StyledTableCell>{item.Title}</StyledTableCell>\n                    <StyledTableCell>{item.Brand}</StyledTableCell>\n                    <StyledTableCell>{item.ProductCost}</StyledTableCell>\n                    <StyledTableCell>{item.unitWeight}</StyledTableCell>\n                    <StyledTableCell>{item.ShippingCost}</StyledTableCell>\n                    <StyledTableCell>{item.ReferralFee}</StyledTableCell>\n                    <StyledTableCell onClick={() => onEdit({ UPC: item.UPC, columnName: \"PackagingFactor\" })}>\n                      {\n                        inEditMode.status && inEditMode.rowKey === item.UPC && inEditMode.columnName === \"PackagingFactor\" ? (\n                          <div>\n                            <TextField value={value} placeholder={item.PackagingFactor}\n                              onChange={(event) => changeValue(event.target.value)}\n                              onKeyPress={(event) => keyPress(event, { UPC: item.UPC, columnName: \"PackagingFactor\" })}\n                              autoFocus\n                            />\n                          </div>\n                        ) : (\n                            item.PackagingFactor\n                          )\n                      }\n                    </StyledTableCell>\n                    <StyledTableCell>{item.BuyBoxPrice}</StyledTableCell>\n                    <StyledTableCell style={conditionalStyle(\"TotalProductCost\", item, index)}>{item.TotalProductCost}</StyledTableCell>\n                    <StyledTableCell style={conditionalStyle(\"Profit\", item, index)}>{item.Profit}</StyledTableCell>\n                    <StyledTableCell style={conditionalStyle(\"Margin\", item, index)}>{item.Margin}</StyledTableCell>\n                    <StyledTableCell style={conditionalStyle(\"ROI\", item, index)}>{item.ROI}</StyledTableCell>\n                    <StyledTableCell onClick={() => onEdit({ UPC: item.UPC, columnName: \"Variable_Margin\" })}>\n                      {\n                        inEditMode.status && inEditMode.rowKey === item.UPC && inEditMode.columnName === \"Variable_Margin\" ? (\n                          <div>\n                            <TextField value={value} placeholder={item.Variable_Margin}\n                              onChange={(event) => changeValue(event.target.value)}\n                              onKeyPress={(event) => keyPress(event, { UPC: item.UPC, columnName: \"Variable_Margin\" })}\n                              autoFocus\n                            />\n                          </div>\n                        ) : (\n                            item.Variable_Margin\n                          )\n                      }\n                    </StyledTableCell>\n                    <StyledTableCell style={conditionalStyle(\"New_Price_Factor\", item, index)}>{item.New_Price_Factor}</StyledTableCell>\n                    <StyledTableCell style={conditionalStyle(\"New_Price\", item, index)}>{item.New_Price}</StyledTableCell>\n                    <StyledTableCell style={conditionalStyle(\"New_Referral_Fee\", item, index)}>{item.New_Referral_Fee}</StyledTableCell>\n                    <StyledTableCell style={conditionalStyle(\"New_Profit\", item, index)}>{item.New_Profit}</StyledTableCell>\n                    <StyledTableCell style={conditionalStyle(\"New_Margin\", item, index)}>{item.New_Margin}</StyledTableCell>\n                    <StyledTableCell style={conditionalStyle(\"New_ROI\", item, index)}>{item.New_ROI}</StyledTableCell>\n                    <StyledTableCell style={conditionalStyle(\"Min_Price\", item, index)}>{item.Min_Price}</StyledTableCell>\n                    <StyledTableCell style={conditionalStyle(\"Max_Price\", item, index)}>{item.Max_Price}</StyledTableCell>\n                    <StyledTableCell>{item.Match_Buy_Box}</StyledTableCell>\n                    <StyledTableCell>{item.Channel}</StyledTableCell>\n                    <StyledTableCell>{item.BSR}</StyledTableCell>\n                    <StyledTableCell>{item.Quantity}</StyledTableCell>\n                    <StyledTableCell>{item.Rating}</StyledTableCell>\n                  </StyledTableRow>\n                ))\n            }\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={data.currentData.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n        style={{ backgroundColor: \"#3f51b5\", borderRadius: \"0px 0px 10px 10px\", color: \"white\" }}\n      />\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}