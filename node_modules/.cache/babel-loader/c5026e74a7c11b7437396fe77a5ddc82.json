{"ast":null,"code":"import _slicedToArray from \"/Users/reedmurphy/Desktop/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/Users/reedmurphy/Desktop/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/reedmurphy/Desktop/material-dashboard-react-master/src/components/Graphs/LineGraph.jsx\";\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ResponsiveContainer } from 'recharts';\nimport dataConverter from \"services/dataConverter\"; // const origDataFormat = {\n//     labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n//     series: {\"Reed\": [12, 17, 7, 17, 23, 18, 28], \"Gary\": [13, 19, 22, 10, 28, 18, 26], \"Clive\": [18, 12, 21, 24, 33, 29, 31], \"Nicolas\": [13, 18, 22, 17, 28, 24, 27]}\n// }\n\nvar desiredDataFormat = {\n  // Labels - days of the month\n  labels: [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\"].concat(_toConsumableArray(\"30\")),\n  // Data series orders count\n  series: {\n    \"Orders\": {\n      count: [12, 17, 7, 17, 23, 18, 28],\n      isActive: true,\n      Background_Color: 'blue'\n    },\n    \"Sales\": {\n      values: [1200, 1700, 700, 1700, 2300, 1800, 2800],\n      isActive: true,\n      Background_Color: 'red'\n    },\n    \"Profit\": {\n      values: [600, 800, 400, 100, 1300, 900, 1400],\n      isActive: true,\n      Background_Color: 'green'\n    }\n  }\n};\nexport default function LineGraph(props) {\n  var _this = this;\n\n  var colors = [\"#fea320\", \"#932bad\", \"#eb4946\", \"#19bcd0\"];\n\n  var _dataConverter = dataConverter(props.data),\n      _dataConverter2 = _slicedToArray(_dataConverter, 2),\n      realData = _dataConverter2[0],\n      keys = _dataConverter2[1];\n\n  var graphColor = \"#545B4E\";\n  return /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: props.height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    data: realData,\n    margin: {\n      top: 5,\n      right: 40,\n      left: -40,\n      bottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    stroke: graphColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"name\",\n    stroke: graphColor,\n    strokeWidth: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    fontSize: \"10px\",\n    stroke: graphColor,\n    strokeWidth: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    iconSize: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), keys.map(function (key, index) {\n    return /*#__PURE__*/React.createElement(Line, {\n      type: \"linear\",\n      dataKey: key,\n      stroke: colors[index],\n      strokeWidth: \"3\",\n      dot: {\n        strokeWidth: \"4\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 43\n      }\n    });\n  })));\n}","map":{"version":3,"sources":["/Users/reedmurphy/Desktop/material-dashboard-react-master/src/components/Graphs/LineGraph.jsx"],"names":["React","LineChart","Line","XAxis","YAxis","Tooltip","CartesianGrid","Legend","ResponsiveContainer","dataConverter","desiredDataFormat","labels","series","count","isActive","Background_Color","values","LineGraph","props","colors","data","realData","keys","graphColor","height","top","right","left","bottom","map","key","index","strokeWidth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ResponsiveContainer } from 'recharts';\n\nimport dataConverter from \"services/dataConverter\";\n\n// const origDataFormat = {\n//     labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n//     series: {\"Reed\": [12, 17, 7, 17, 23, 18, 28], \"Gary\": [13, 19, 22, 10, 28, 18, 26], \"Clive\": [18, 12, 21, 24, 33, 29, 31], \"Nicolas\": [13, 18, 22, 17, 28, 24, 27]}\n// }\n\nconst desiredDataFormat = {\n    // Labels - days of the month\n    labels: [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", ...\"30\"],\n    // Data series orders count\n    series: {\n        \"Orders\": {\n            count: [12, 17, 7, 17, 23, 18, 28],\n            isActive: true,\n            Background_Color: 'blue'\n        },\n        \"Sales\": {\n            values: [1200, 1700, 700, 1700, 2300, 1800, 2800],\n            isActive: true,\n            Background_Color: 'red'\n        },\n        \"Profit\": {\n            values: [600, 800, 400, 100, 1300, 900, 1400],\n            isActive: true,\n            Background_Color: 'green'\n        }\n    }\n}\n\nexport default function LineGraph(props) {\n    const colors = [\"#fea320\", \"#932bad\", \"#eb4946\", \"#19bcd0\"];\n    const [realData, keys] = dataConverter(props.data);\n\n    const graphColor = \"#545B4E\"\n    return (\n        <ResponsiveContainer width=\"100%\" height={props.height}>\n            <LineChart data={realData}\n                margin={{ top: 5, right: 40, left: -40, bottom: 5 }}>\n                <CartesianGrid strokeDasharray=\"3 3\" stroke={graphColor} />\n                <XAxis dataKey=\"name\" stroke={graphColor} strokeWidth=\"2\"/>\n                <YAxis fontSize=\"10px\" stroke={graphColor} strokeWidth=\"2\" />\n                <Tooltip />\n                <Legend iconSize={20} />\n                {keys.map((key, index) => <Line type=\"linear\" dataKey={key} stroke={colors[index]} strokeWidth=\"3\" dot={{strokeWidth: \"4\"}} />)}\n            </LineChart>\n        </ResponsiveContainer>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}