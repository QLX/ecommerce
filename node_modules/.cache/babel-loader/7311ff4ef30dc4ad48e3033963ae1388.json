{"ast":null,"code":"import _slicedToArray from \"/Users/reedmurphy/Desktop/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/reedmurphy/Desktop/material-dashboard-react-master/src/views/Dashboard/Dashboard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\"; // react plugin for creating charts\n\nimport ChartistGraph from \"react-chartist\"; // @material-ui/core\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n\nimport Store from \"@material-ui/icons/Store\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport DateRange from \"@material-ui/icons/DateRange\";\nimport LocalOffer from \"@material-ui/icons/LocalOffer\";\nimport Update from \"@material-ui/icons/Update\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\nimport Accessibility from \"@material-ui/icons/Accessibility\";\nimport BugReport from \"@material-ui/icons/BugReport\";\nimport Code from \"@material-ui/icons/Code\";\nimport Cloud from \"@material-ui/icons/Cloud\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Table from \"components/Table/Table.js\";\nimport Tasks from \"components/Tasks/Tasks.js\";\nimport CustomTabs from \"components/CustomTabs/CustomTabs.js\";\nimport Danger from \"components/Typography/Danger.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardIcon from \"components/Card/CardIcon.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport LineGraph from \"components/Graphs/LineGraph\";\nimport BarGraph from \"components/Graphs/BarGraph\";\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport Kpi1 from \"components/KPI/Kpi1\";\nimport Kpi2 from \"components/KPI/Kpi2\";\nimport Kpi3 from \"components/KPI/Kpi3\";\nimport Kpi6 from \"components/KPI/Kpi6\";\nimport dataConverter from \"services/dataConverter\";\nimport getMonth from \"services/getMonth\";\nimport { bugs, website, server } from \"variables/general.js\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { Typography } from \"@material-ui/core\";\nvar useStyles = makeStyles(styles);\nexport default function Dashboard() {\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      kpi1 = _useState2[0],\n      updateKpi1 = _useState2[1];\n\n  var _useState3 = useState({\n    labels: {},\n    series: {},\n    currentData: {\n      labels: [],\n      series: {}\n    }\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      kpi2 = _useState4[0],\n      updateKpi2 = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      kpi3 = _useState6[0],\n      updateKpi3 = _useState6[1];\n\n  var _useState7 = useState({\n    products: [],\n    totalSales: [],\n    currentData: {\n      timeFrame: \"\",\n      products: [],\n      totalSales: []\n    } // products: [],\n    // totalSales: []\n\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      kpi6 = _useState8[0],\n      updateKpi6 = _useState8[1];\n\n  useEffect(function () {\n    var requestOne = axios.get('http://localhost:5000/kpi1/');\n    var requestTwo = axios.get(\"http://localhost:5000/kpi2/\");\n    var requestThree = axios.get('http://localhost:5000/kpi3');\n    var requestFour = axios.get('http://localhost:5000/kpi6');\n    axios.all([requestOne, requestTwo, requestThree, requestFour]).then(axios.spread(function () {\n      for (var _len = arguments.length, responses = new Array(_len), _key = 0; _key < _len; _key++) {\n        responses[_key] = arguments[_key];\n      }\n\n      updateKpi1(responses[0].data);\n      updateKpi2({\n        labels: responses[1].data.labels,\n        series: responses[1].data.series,\n        currentData: {\n          labels: responses[1].data.labels.week,\n          series: series\n        }\n      });\n      updateKpi3(responses[2].data);\n      updateKpi6(function () {\n        var products = responses[3].data[0];\n        var totalSales = responses[3].data[1];\n        var productsData = products.map(function (datum) {\n          return {\n            \"id\": datum.id,\n            \"label\": datum.label,\n            \"value\": datum.value.today,\n            \"color\": datum.color\n          };\n        });\n        var totalSalesData = totalSales.map(function (datum) {\n          return {\n            \"id\": datum.id,\n            \"label\": datum.label,\n            \"value\": datum.value.today,\n            \"color\": datum.color\n          };\n        });\n        return {\n          products: responses[3].data[0],\n          totalSales: responses[3].data[1],\n          currentData: {\n            products: productsData,\n            totalSales: totalSalesData\n          }\n        };\n      });\n    }))[\"catch\"](function (errors) {\n      return console.log(errors);\n    });\n  }, []);\n\n  function handleButtonClick(event) {\n    var dataType = event.currentTarget.parentElement.getAttribute('name');\n    var name = event.currentTarget.name;\n    var newData = kpi6[dataType].map(function (datum) {\n      return {\n        \"id\": datum.id,\n        \"label\": datum.label,\n        \"value\": datum.value[name],\n        \"color\": datum.color\n      };\n    });\n    updateKpi6(function (prevValue) {\n      return {\n        products: prevValue.products,\n        totalSales: prevValue.totalSales,\n        currentData: {\n          products: dataType === 'products' ? newData : prevValue.currentData.products,\n          totalSales: dataType === 'totalSales' ? newData : prevValue.currentData.totalSales\n        }\n      };\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Kpi1, {\n    kpi1: kpi1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Kpi6, {\n    handleButtonClick: handleButtonClick,\n    currentData: kpi6.currentData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(GridContainer, {\n    style: {\n      marginTop: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    style: {\n      marginTop: \"3vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Kpi3, {\n    rows: kpi3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/reedmurphy/Desktop/material-dashboard-react-master/src/views/Dashboard/Dashboard.js"],"names":["React","useState","useEffect","axios","ChartistGraph","makeStyles","Icon","Store","Warning","DateRange","LocalOffer","Update","ArrowUpward","AccessTime","Accessibility","BugReport","Code","Cloud","GridItem","GridContainer","Table","Tasks","CustomTabs","Danger","Card","CardHeader","CardIcon","CardBody","CardFooter","LineGraph","BarGraph","AttachMoneyIcon","MonetizationOnIcon","Kpi1","Kpi2","Kpi3","Kpi6","dataConverter","getMonth","bugs","website","server","styles","Typography","useStyles","Dashboard","classes","kpi1","updateKpi1","labels","series","currentData","kpi2","updateKpi2","kpi3","updateKpi3","products","totalSales","timeFrame","kpi6","updateKpi6","requestOne","get","requestTwo","requestThree","requestFour","all","then","spread","responses","data","week","productsData","map","datum","id","label","value","today","color","totalSalesData","errors","console","log","handleButtonClick","event","dataType","currentTarget","parentElement","getAttribute","name","newData","prevValue","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// react plugin for creating charts\nimport ChartistGraph from \"react-chartist\";\n// @material-ui/core\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\";\n// @material-ui/icons\nimport Store from \"@material-ui/icons/Store\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport DateRange from \"@material-ui/icons/DateRange\";\nimport LocalOffer from \"@material-ui/icons/LocalOffer\";\nimport Update from \"@material-ui/icons/Update\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\nimport Accessibility from \"@material-ui/icons/Accessibility\";\nimport BugReport from \"@material-ui/icons/BugReport\";\nimport Code from \"@material-ui/icons/Code\";\nimport Cloud from \"@material-ui/icons/Cloud\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Table from \"components/Table/Table.js\";\nimport Tasks from \"components/Tasks/Tasks.js\";\nimport CustomTabs from \"components/CustomTabs/CustomTabs.js\";\nimport Danger from \"components/Typography/Danger.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardIcon from \"components/Card/CardIcon.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\n\nimport LineGraph from \"components/Graphs/LineGraph\";\nimport BarGraph from \"components/Graphs/BarGraph\";\n\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\n\nimport Kpi1 from \"components/KPI/Kpi1\";\nimport Kpi2 from \"components/KPI/Kpi2\";\nimport Kpi3 from \"components/KPI/Kpi3\";\nimport Kpi6 from \"components/KPI/Kpi6\";\n\nimport dataConverter from \"services/dataConverter\";\n\nimport getMonth from \"services/getMonth\";\n\nimport { bugs, website, server } from \"variables/general.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(styles);\n\n\nexport default function Dashboard() {\n  const classes = useStyles();\n\n  const [kpi1, updateKpi1] = useState([]);\n  const [kpi2, updateKpi2] = useState({\n    labels: {},\n    series: {},\n    currentData: {\n      labels: [],\n      series: {}\n    }\n  });\n  const [kpi3, updateKpi3] = useState([]);\n  const [kpi6, updateKpi6] = useState({\n    products: [],\n    totalSales: [],\n    currentData: {\n      timeFrame: \"\",\n      products: [],\n      totalSales: []\n    }\n\n    // products: [],\n    // totalSales: []\n  });\n\n  useEffect(() => {\n\n    const requestOne = axios.get('http://localhost:5000/kpi1/');\n    const requestTwo = axios.get(`http://localhost:5000/kpi2/`);\n    const requestThree = axios.get('http://localhost:5000/kpi3');\n    const requestFour = axios.get('http://localhost:5000/kpi6');\n\n    axios.all([requestOne, requestTwo, requestThree, requestFour])\n      .then(axios.spread((...responses) => {\n        updateKpi1(responses[0].data);\n        updateKpi2({\n          labels: responses[1].data.labels,\n          series: responses[1].data.series,\n          currentData: {\n            labels: responses[1].data.labels.week,\n            series\n          }\n        });\n        updateKpi3(responses[2].data);\n        updateKpi6(() => {\n          const products = responses[3].data[0];\n          const totalSales = responses[3].data[1];\n          const productsData = products.map(datum => {\n            return {\n              \"id\": datum.id,\n              \"label\": datum.label,\n              \"value\": datum.value.today,\n              \"color\": datum.color\n            }\n          });\n          const totalSalesData = totalSales.map(datum => {\n            return {\n              \"id\": datum.id,\n              \"label\": datum.label,\n              \"value\": datum.value.today,\n              \"color\": datum.color\n            }\n          });\n          return {\n            products: responses[3].data[0],\n            totalSales: responses[3].data[1],\n            currentData: {\n              products: productsData,\n              totalSales: totalSalesData\n            }\n          }\n\n        });\n      }))\n      .catch(errors => console.log(errors));\n\n  }, []);\n\n  function handleButtonClick(event) {\n    const dataType = event.currentTarget.parentElement.getAttribute('name');\n    const name = event.currentTarget.name;\n    const newData = kpi6[dataType].map(datum => {\n      return {\n        \"id\": datum.id,\n        \"label\": datum.label,\n        \"value\": datum.value[name],\n        \"color\": datum.color\n      }\n    })\n    updateKpi6(prevValue => {\n      return {\n        products: prevValue.products,\n        totalSales: prevValue.totalSales,\n        currentData: {\n          products: dataType === 'products' ? newData : prevValue.currentData.products,\n          totalSales: dataType === 'totalSales' ? newData : prevValue.currentData.totalSales,\n        }\n      }\n    });\n  }\n\n  return (\n    <div>\n      <Kpi1 kpi1={kpi1} />\n      <Kpi6 handleButtonClick={handleButtonClick} currentData={kpi6.currentData} />\n      <GridContainer style={{ marginTop: \"50px\" }}>\n        <GridItem xs={12} sm={12} md={6}>\n          {/* <Kpi2 data={kpi2.data} keys={kpi2.keys} /> */}\n        </GridItem>\n        <GridItem xs={12} sm={12} md={6} style={{ marginTop: \"3vh\" }}>\n          <Kpi3 rows={kpi3} />\n        </GridItem>\n        {/* <GridItem xs={12} sm={12} md={6}>\n          <Card chart>\n            <CardHeader color=\"warning\"> */}\n        {/* <BarGraph /> */}\n        {/* </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>Email Subscriptions</h4>\n              <p className={classes.cardCategory}>Last Campaign Performance</p>\n            </CardBody>\n            <CardFooter chart>\n              <div className={classes.stats}>\n                <AccessTime /> campaign sent 2 days ago\n                </div>\n            </CardFooter>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card chart>\n            <CardHeader color=\"info\"> */}\n        {/* <LineGraph data={kpi2} height={250} /> */}\n        {/* </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>Completed Tasks</h4>\n              <p className={classes.cardCategory}>Last Campaign Performance</p>\n            </CardBody>\n            <CardFooter chart>\n              <div className={classes.stats}>\n                <AccessTime /> campaign sent 2 days ago\n                </div>\n            </CardFooter>\n          </Card>\n        </GridItem>\n      </GridContainer>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={6}>\n          <CustomTabs\n            title=\"Tasks:\"\n            headerColor=\"primary\"\n            tabs={[\n              {\n                tabName: \"Bugs\",\n                tabIcon: BugReport,\n                tabContent: (\n                  <Tasks\n                    checkedIndexes={[0, 3]}\n                    tasksIndexes={[0, 1, 2, 3]}\n                    tasks={bugs}\n                  />\n                )\n              },\n              {\n                tabName: \"Website\",\n                tabIcon: Code,\n                tabContent: (\n                  <Tasks\n                    checkedIndexes={[0]}\n                    tasksIndexes={[0, 1]}\n                    tasks={website}\n                  />\n                )\n              },\n              {\n                tabName: \"Server\",\n                tabIcon: Cloud,\n                tabContent: (\n                  <Tasks\n                    checkedIndexes={[1]}\n                    tasksIndexes={[0, 1, 2]}\n                    tasks={server}\n                  />\n                )\n              }\n            ]}\n          />\n        </GridItem>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card>\n            <CardHeader color=\"warning\">\n              <h4 className={classes.cardTitleWhite}>Employees Stats</h4>\n              <p className={classes.cardCategoryWhite}>\n                New employees on 15th September, 2016\n                </p>\n            </CardHeader>\n            <CardBody>\n              <Table\n                tableHeaderColor=\"warning\"\n                tableHead={[\"ID\", \"Name\", \"Salary\", \"Country\"]}\n                tableData={[\n                  [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\"],\n                  [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\"],\n                  [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\"],\n                  [\"4\", \"Philip Chaney\", \"$38,735\", \"Korea, South\"]\n                ]}\n              />\n            </CardBody>\n          </Card>\n        </GridItem> */}\n      </GridContainer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}